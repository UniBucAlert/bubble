{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useResourceDefinition, useShowContext } from 'ra-core';\nimport { EditButton } from '../button';\nimport TopToolbar from '../layout/TopToolbar';\n\nvar sanitizeRestProps = function (_a) {\n  var basePath = _a.basePath,\n      className = _a.className,\n      hasEdit = _a.hasEdit,\n      hasList = _a.hasList,\n      resource = _a.resource,\n      rest = __rest(_a, [\"basePath\", \"className\", \"hasEdit\", \"hasList\", \"resource\"]);\n\n  return rest;\n};\n/**\n * Action Toolbar for the Show view\n *\n * Internal component. If you want to add or remove actions for a Show view,\n * write your own ShowActions Component. Then, in the <Show> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n *     import Button from '@material-ui/core/Button';\n *     import { TopToolbar, EditButton, Show } from 'react-admin';\n *\n *     const PostShowActions = ({ basePath, record, resource }) => (\n *         <TopToolbar>\n *             <EditButton basePath={basePath} record={record} />\n *             // Add your custom actions here //\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\n *         </TopToolbar>\n *     );\n *\n *     export const PostShow = (props) => (\n *         <Show actions={<PostShowActions />} {...props}>\n *             ...\n *         </Show>\n *     );\n */\n\n\nexport var ShowActions = function (_a) {\n  var className = _a.className,\n      rest = __rest(_a, [\"className\"]);\n\n  var _b = useShowContext(rest),\n      basePath = _b.basePath,\n      record = _b.record;\n\n  var hasEdit = useResourceDefinition(rest).hasEdit;\n  return React.createElement(TopToolbar, __assign({\n    className: className\n  }, sanitizeRestProps(rest)), hasEdit && React.createElement(EditButton, {\n    basePath: basePath,\n    record: record\n  }));\n};\nShowActions.propTypes = {\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  data: PropTypes.object,\n  hasCreate: PropTypes.bool,\n  hasEdit: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  hasList: PropTypes.bool,\n  resource: PropTypes.string\n};","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/detail/ShowActions.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","PropTypes","useResourceDefinition","useShowContext","EditButton","TopToolbar","sanitizeRestProps","_a","basePath","className","hasEdit","hasList","resource","rest","ShowActions","_b","record","createElement","propTypes","string","data","object","hasCreate","bool","hasShow"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useResourceDefinition, useShowContext } from 'ra-core';\nimport { EditButton } from '../button';\nimport TopToolbar from '../layout/TopToolbar';\nvar sanitizeRestProps = function (_a) {\n    var basePath = _a.basePath, className = _a.className, hasEdit = _a.hasEdit, hasList = _a.hasList, resource = _a.resource, rest = __rest(_a, [\"basePath\", \"className\", \"hasEdit\", \"hasList\", \"resource\"]);\n    return rest;\n};\n/**\n * Action Toolbar for the Show view\n *\n * Internal component. If you want to add or remove actions for a Show view,\n * write your own ShowActions Component. Then, in the <Show> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n *     import Button from '@material-ui/core/Button';\n *     import { TopToolbar, EditButton, Show } from 'react-admin';\n *\n *     const PostShowActions = ({ basePath, record, resource }) => (\n *         <TopToolbar>\n *             <EditButton basePath={basePath} record={record} />\n *             // Add your custom actions here //\n *             <Button color=\"primary\" onClick={customAction}>Custom Action</Button>\n *         </TopToolbar>\n *     );\n *\n *     export const PostShow = (props) => (\n *         <Show actions={<PostShowActions />} {...props}>\n *             ...\n *         </Show>\n *     );\n */\nexport var ShowActions = function (_a) {\n    var className = _a.className, rest = __rest(_a, [\"className\"]);\n    var _b = useShowContext(rest), basePath = _b.basePath, record = _b.record;\n    var hasEdit = useResourceDefinition(rest).hasEdit;\n    return (React.createElement(TopToolbar, __assign({ className: className }, sanitizeRestProps(rest)), hasEdit && React.createElement(EditButton, { basePath: basePath, record: record })));\n};\nShowActions.propTypes = {\n    basePath: PropTypes.string,\n    className: PropTypes.string,\n    data: PropTypes.object,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    hasList: PropTypes.bool,\n    resource: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}