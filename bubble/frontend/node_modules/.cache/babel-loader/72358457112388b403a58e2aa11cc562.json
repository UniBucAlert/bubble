{"ast":null,"code":"import { useCallback } from 'react';\nimport useVersion from '../useVersion';\nimport { useCheckMinimumRequiredProps } from '../checkMinimumRequiredProps';\nimport { useNotify, useRedirect, useRefresh } from '../../sideEffect';\nimport { useGetOne, useUpdate } from '../../dataProvider';\nimport { useTranslate } from '../../i18n';\nimport { CRUD_GET_ONE, CRUD_UPDATE } from '../../actions';\nimport { useSaveModifiers } from '../saveModifiers';\nimport { useResourceContext, useGetResourceLabel } from '../../core';\n/**\n * Prepare data for the Edit view\n *\n * @param {Object} props The props passed to the Edit component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Edit view\n *\n * @example\n *\n * import { useEditController } from 'react-admin';\n * import EditView from './EditView';\n *\n * const MyEdit = props => {\n *     const controllerProps = useEditController(props);\n *     return <EditView {...controllerProps} {...props} />;\n * }\n */\n\nexport var useEditController = function (props) {\n  useCheckMinimumRequiredProps('Edit', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      hasCreate = props.hasCreate,\n      hasEdit = props.hasEdit,\n      hasList = props.hasList,\n      hasShow = props.hasShow,\n      id = props.id,\n      successMessage = props.successMessage,\n      // @deprecated use mutationMode: undoable instead\n  _a = props.undoable,\n      // @deprecated use mutationMode: undoable instead\n  undoable = _a === void 0 ? true : _a,\n      onSuccess = props.onSuccess,\n      onFailure = props.onFailure,\n      _b = props.mutationMode,\n      mutationMode = _b === void 0 ? undoable ? 'undoable' : undefined : _b,\n      transform = props.transform;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n  var version = useVersion();\n\n  if (process.env.NODE_ENV !== 'production' && successMessage) {\n    console.log('<Edit successMessage> prop is deprecated, use the onSuccess prop instead.');\n  }\n\n  var _c = useSaveModifiers({\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    transform: transform\n  }),\n      onSuccessRef = _c.onSuccessRef,\n      setOnSuccess = _c.setOnSuccess,\n      onFailureRef = _c.onFailureRef,\n      setOnFailure = _c.setOnFailure,\n      transformRef = _c.transformRef,\n      setTransform = _c.setTransform;\n\n  var _d = useGetOne(resource, id, {\n    action: CRUD_GET_ONE,\n    onFailure: function () {\n      notify('ra.notification.item_doesnt_exist', 'warning');\n      redirect('list', basePath);\n      refresh();\n    }\n  }),\n      record = _d.data,\n      loading = _d.loading,\n      loaded = _d.loaded;\n\n  var getResourceLabel = useGetResourceLabel();\n  var defaultTitle = translate('ra.page.edit', {\n    name: getResourceLabel(resource, 1),\n    id: id,\n    record: record\n  });\n\n  var _e = useUpdate(resource, id, {}, // set by the caller\n  record),\n      update = _e[0],\n      saving = _e[1].loading;\n\n  var save = useCallback(function (data, redirectTo, _a) {\n    if (redirectTo === void 0) {\n      redirectTo = DefaultRedirect;\n    }\n\n    var _b = _a === void 0 ? {} : _a,\n        onSuccessFromSave = _b.onSuccess,\n        onFailureFromSave = _b.onFailure,\n        transformFromSave = _b.transform;\n\n    return Promise.resolve(transformFromSave ? transformFromSave(data) : transformRef.current ? transformRef.current(data) : data).then(function (data) {\n      return update({\n        payload: {\n          data: data\n        }\n      }, {\n        action: CRUD_UPDATE,\n        onSuccess: onSuccessFromSave ? onSuccessFromSave : onSuccessRef.current ? onSuccessRef.current : function () {\n          notify(successMessage || 'ra.notification.updated', 'info', {\n            smart_count: 1\n          }, mutationMode === 'undoable');\n          redirect(redirectTo, basePath, data.id, data);\n        },\n        onFailure: onFailureFromSave ? onFailureFromSave : onFailureRef.current ? onFailureRef.current : function (error) {\n          notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning', {\n            _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n          });\n\n          if (mutationMode === 'undoable' || mutationMode === 'pessimistic') {\n            refresh();\n          }\n        },\n        mutationMode: mutationMode\n      });\n    });\n  }, [transformRef, update, onSuccessRef, onFailureRef, notify, successMessage, redirect, basePath, refresh, mutationMode]);\n  return {\n    loading: loading,\n    loaded: loaded,\n    saving: saving,\n    defaultTitle: defaultTitle,\n    hasCreate: hasCreate,\n    hasEdit: hasEdit,\n    hasList: hasList,\n    hasShow: hasShow,\n    onSuccessRef: onSuccessRef,\n    onFailureRef: onFailureRef,\n    transformRef: transformRef,\n    save: save,\n    setOnSuccess: setOnSuccess,\n    setOnFailure: setOnFailure,\n    setTransform: setTransform,\n    resource: resource,\n    basePath: basePath,\n    record: record,\n    redirect: DefaultRedirect,\n    version: version\n  };\n};\nvar DefaultRedirect = 'list';","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/details/useEditController.js"],"names":["useCallback","useVersion","useCheckMinimumRequiredProps","useNotify","useRedirect","useRefresh","useGetOne","useUpdate","useTranslate","CRUD_GET_ONE","CRUD_UPDATE","useSaveModifiers","useResourceContext","useGetResourceLabel","useEditController","props","basePath","hasCreate","hasEdit","hasList","hasShow","id","successMessage","_a","undoable","onSuccess","onFailure","_b","mutationMode","undefined","transform","resource","translate","notify","redirect","refresh","version","process","env","NODE_ENV","console","log","_c","onSuccessRef","setOnSuccess","onFailureRef","setOnFailure","transformRef","setTransform","_d","action","record","data","loading","loaded","getResourceLabel","defaultTitle","name","_e","update","saving","save","redirectTo","DefaultRedirect","onSuccessFromSave","onFailureFromSave","transformFromSave","Promise","resolve","current","then","payload","smart_count","error","message","_"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\nimport useVersion from '../useVersion';\nimport { useCheckMinimumRequiredProps } from '../checkMinimumRequiredProps';\nimport { useNotify, useRedirect, useRefresh, } from '../../sideEffect';\nimport { useGetOne, useUpdate } from '../../dataProvider';\nimport { useTranslate } from '../../i18n';\nimport { CRUD_GET_ONE, CRUD_UPDATE } from '../../actions';\nimport { useSaveModifiers, } from '../saveModifiers';\nimport { useResourceContext, useGetResourceLabel } from '../../core';\n/**\n * Prepare data for the Edit view\n *\n * @param {Object} props The props passed to the Edit component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Edit view\n *\n * @example\n *\n * import { useEditController } from 'react-admin';\n * import EditView from './EditView';\n *\n * const MyEdit = props => {\n *     const controllerProps = useEditController(props);\n *     return <EditView {...controllerProps} {...props} />;\n * }\n */\nexport var useEditController = function (props) {\n    useCheckMinimumRequiredProps('Edit', ['basePath', 'resource'], props);\n    var basePath = props.basePath, hasCreate = props.hasCreate, hasEdit = props.hasEdit, hasList = props.hasList, hasShow = props.hasShow, id = props.id, successMessage = props.successMessage, \n    // @deprecated use mutationMode: undoable instead\n    _a = props.undoable, \n    // @deprecated use mutationMode: undoable instead\n    undoable = _a === void 0 ? true : _a, onSuccess = props.onSuccess, onFailure = props.onFailure, _b = props.mutationMode, mutationMode = _b === void 0 ? undoable ? 'undoable' : undefined : _b, transform = props.transform;\n    var resource = useResourceContext(props);\n    var translate = useTranslate();\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var refresh = useRefresh();\n    var version = useVersion();\n    if (process.env.NODE_ENV !== 'production' && successMessage) {\n        console.log('<Edit successMessage> prop is deprecated, use the onSuccess prop instead.');\n    }\n    var _c = useSaveModifiers({ onSuccess: onSuccess, onFailure: onFailure, transform: transform }), onSuccessRef = _c.onSuccessRef, setOnSuccess = _c.setOnSuccess, onFailureRef = _c.onFailureRef, setOnFailure = _c.setOnFailure, transformRef = _c.transformRef, setTransform = _c.setTransform;\n    var _d = useGetOne(resource, id, {\n        action: CRUD_GET_ONE,\n        onFailure: function () {\n            notify('ra.notification.item_doesnt_exist', 'warning');\n            redirect('list', basePath);\n            refresh();\n        },\n    }), record = _d.data, loading = _d.loading, loaded = _d.loaded;\n    var getResourceLabel = useGetResourceLabel();\n    var defaultTitle = translate('ra.page.edit', {\n        name: getResourceLabel(resource, 1),\n        id: id,\n        record: record,\n    });\n    var _e = useUpdate(resource, id, {}, // set by the caller\n    record), update = _e[0], saving = _e[1].loading;\n    var save = useCallback(function (data, redirectTo, _a) {\n        if (redirectTo === void 0) { redirectTo = DefaultRedirect; }\n        var _b = _a === void 0 ? {} : _a, onSuccessFromSave = _b.onSuccess, onFailureFromSave = _b.onFailure, transformFromSave = _b.transform;\n        return Promise.resolve(transformFromSave\n            ? transformFromSave(data)\n            : transformRef.current\n                ? transformRef.current(data)\n                : data).then(function (data) {\n            return update({ payload: { data: data } }, {\n                action: CRUD_UPDATE,\n                onSuccess: onSuccessFromSave\n                    ? onSuccessFromSave\n                    : onSuccessRef.current\n                        ? onSuccessRef.current\n                        : function () {\n                            notify(successMessage ||\n                                'ra.notification.updated', 'info', {\n                                smart_count: 1,\n                            }, mutationMode === 'undoable');\n                            redirect(redirectTo, basePath, data.id, data);\n                        },\n                onFailure: onFailureFromSave\n                    ? onFailureFromSave\n                    : onFailureRef.current\n                        ? onFailureRef.current\n                        : function (error) {\n                            notify(typeof error === 'string'\n                                ? error\n                                : error.message ||\n                                    'ra.notification.http_error', 'warning', {\n                                _: typeof error === 'string'\n                                    ? error\n                                    : error && error.message\n                                        ? error.message\n                                        : undefined,\n                            });\n                            if (mutationMode === 'undoable' ||\n                                mutationMode === 'pessimistic') {\n                                refresh();\n                            }\n                        },\n                mutationMode: mutationMode,\n            });\n        });\n    }, [\n        transformRef,\n        update,\n        onSuccessRef,\n        onFailureRef,\n        notify,\n        successMessage,\n        redirect,\n        basePath,\n        refresh,\n        mutationMode,\n    ]);\n    return {\n        loading: loading,\n        loaded: loaded,\n        saving: saving,\n        defaultTitle: defaultTitle,\n        hasCreate: hasCreate,\n        hasEdit: hasEdit,\n        hasList: hasList,\n        hasShow: hasShow,\n        onSuccessRef: onSuccessRef,\n        onFailureRef: onFailureRef,\n        transformRef: transformRef,\n        save: save,\n        setOnSuccess: setOnSuccess,\n        setOnFailure: setOnFailure,\n        setTransform: setTransform,\n        resource: resource,\n        basePath: basePath,\n        record: record,\n        redirect: DefaultRedirect,\n        version: version,\n    };\n};\nvar DefaultRedirect = 'list';\n"]},"metadata":{},"sourceType":"module"}