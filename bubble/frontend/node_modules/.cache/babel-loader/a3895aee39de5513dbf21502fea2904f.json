{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport * as React from 'react';\nimport { Children, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormWithRedirect } from 'ra-core';\nimport get from 'lodash/get';\nimport { TabbedFormView } from './TabbedFormView';\n/**\n * Form layout where inputs are divided by tab, one input per line.\n *\n * Pass FormTab components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import {\n *     Edit,\n *     TabbedForm,\n *     FormTab,\n *     Datagrid,\n *     TextField,\n *     DateField,\n *     TextInput,\n *     ReferenceManyField,\n *     NumberInput,\n *     DateInput,\n *     BooleanInput,\n *     EditButton\n * } from 'react-admin';\n *\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <TabbedForm>\n *             <FormTab label=\"summary\">\n *                 <TextInput disabled label=\"Id\" source=\"id\" />\n *                 <TextInput source=\"title\" validate={required()} />\n *                 <TextInput multiline source=\"teaser\" validate={required()} />\n *             </FormTab>\n *             <FormTab label=\"body\">\n *                 <RichTextInput source=\"body\" validate={required()} addLabel={false} />\n *             </FormTab>\n *             <FormTab label=\"Miscellaneous\">\n *                 <TextInput label=\"Password (if protected post)\" source=\"password\" type=\"password\" />\n *                 <DateInput label=\"Publication date\" source=\"published_at\" />\n *                 <NumberInput source=\"average_note\" validate={[ number(), minValue(0) ]} />\n *                 <BooleanInput label=\"Allow comments?\" source=\"commentable\" defaultValue />\n *                 <TextInput disabled label=\"Nb views\" source=\"views\" />\n *             </FormTab>\n *             <FormTab label=\"comments\">\n *                 <ReferenceManyField reference=\"comments\" target=\"post_id\" addLabel={false}>\n *                     <Datagrid>\n *                         <TextField source=\"body\" />\n *                         <DateField source=\"created_at\" />\n *                         <EditButton />\n *                     </Datagrid>\n *                 </ReferenceManyField>\n *             </FormTab>\n *         </TabbedForm>\n *     </Edit>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} FormTab elements\n * @prop {Object} initialValues\n * @prop {Function} validate\n * @prop {boolean} submitOnEnter\n * @prop {string} redirect\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n * @prop {string} variant Apply variant to all inputs. Possible values are 'standard', 'outlined', and 'filled' (default)\n * @prop {string} margin Apply variant to all inputs. Possible values are 'none', 'normal', and 'dense' (default)\n * @prop {boolean} sanitizeEmptyValues Whether or not deleted record attributes should be recreated with a `null` value (default: true)\n *\n * @param {Props} props\n */\n\nexport var TabbedForm = function (props) {\n  return React.createElement(FormWithRedirect, __assign({}, props, {\n    render: function (formProps) {\n      return React.createElement(TabbedFormView, __assign({}, formProps));\n    }\n  }));\n};\nTabbedForm.propTypes = {\n  children: PropTypes.node,\n  initialValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  // @ts-ignore\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  save: PropTypes.func,\n  saving: PropTypes.bool,\n  submitOnEnter: PropTypes.bool,\n  undoable: PropTypes.bool,\n  validate: PropTypes.func,\n  sanitizeEmptyValues: PropTypes.bool\n};\nexport var findTabsWithErrors = function (children, errors) {\n  console.warn('Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/CreateEdit.html#grouping-inputs');\n  return Children.toArray(children).reduce(function (acc, child) {\n    if (!isValidElement(child)) {\n      return acc;\n    }\n\n    var inputs = Children.toArray(child.props.children);\n\n    if (inputs.some(function (input) {\n      return isValidElement(input) && get(errors, input.props.source);\n    })) {\n      return __spreadArrays(acc, [child.props.label]);\n    }\n\n    return acc;\n  }, []);\n};","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/form/TabbedForm.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","React","Children","isValidElement","PropTypes","FormWithRedirect","get","TabbedFormView","TabbedForm","props","createElement","render","formProps","propTypes","children","node","initialValues","oneOfType","object","func","mutationMode","oneOf","record","redirect","string","bool","save","saving","submitOnEnter","undoable","validate","sanitizeEmptyValues","findTabsWithErrors","errors","console","warn","toArray","reduce","acc","child","inputs","some","input","source","label"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Children, isValidElement, } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormWithRedirect, } from 'ra-core';\nimport get from 'lodash/get';\nimport { TabbedFormView } from './TabbedFormView';\n/**\n * Form layout where inputs are divided by tab, one input per line.\n *\n * Pass FormTab components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import {\n *     Edit,\n *     TabbedForm,\n *     FormTab,\n *     Datagrid,\n *     TextField,\n *     DateField,\n *     TextInput,\n *     ReferenceManyField,\n *     NumberInput,\n *     DateInput,\n *     BooleanInput,\n *     EditButton\n * } from 'react-admin';\n *\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <TabbedForm>\n *             <FormTab label=\"summary\">\n *                 <TextInput disabled label=\"Id\" source=\"id\" />\n *                 <TextInput source=\"title\" validate={required()} />\n *                 <TextInput multiline source=\"teaser\" validate={required()} />\n *             </FormTab>\n *             <FormTab label=\"body\">\n *                 <RichTextInput source=\"body\" validate={required()} addLabel={false} />\n *             </FormTab>\n *             <FormTab label=\"Miscellaneous\">\n *                 <TextInput label=\"Password (if protected post)\" source=\"password\" type=\"password\" />\n *                 <DateInput label=\"Publication date\" source=\"published_at\" />\n *                 <NumberInput source=\"average_note\" validate={[ number(), minValue(0) ]} />\n *                 <BooleanInput label=\"Allow comments?\" source=\"commentable\" defaultValue />\n *                 <TextInput disabled label=\"Nb views\" source=\"views\" />\n *             </FormTab>\n *             <FormTab label=\"comments\">\n *                 <ReferenceManyField reference=\"comments\" target=\"post_id\" addLabel={false}>\n *                     <Datagrid>\n *                         <TextField source=\"body\" />\n *                         <DateField source=\"created_at\" />\n *                         <EditButton />\n *                     </Datagrid>\n *                 </ReferenceManyField>\n *             </FormTab>\n *         </TabbedForm>\n *     </Edit>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} FormTab elements\n * @prop {Object} initialValues\n * @prop {Function} validate\n * @prop {boolean} submitOnEnter\n * @prop {string} redirect\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n * @prop {string} variant Apply variant to all inputs. Possible values are 'standard', 'outlined', and 'filled' (default)\n * @prop {string} margin Apply variant to all inputs. Possible values are 'none', 'normal', and 'dense' (default)\n * @prop {boolean} sanitizeEmptyValues Whether or not deleted record attributes should be recreated with a `null` value (default: true)\n *\n * @param {Props} props\n */\nexport var TabbedForm = function (props) { return (React.createElement(FormWithRedirect, __assign({}, props, { render: function (formProps) { return React.createElement(TabbedFormView, __assign({}, formProps)); } }))); };\nTabbedForm.propTypes = {\n    children: PropTypes.node,\n    initialValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    // @ts-ignore\n    record: PropTypes.object,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    save: PropTypes.func,\n    saving: PropTypes.bool,\n    submitOnEnter: PropTypes.bool,\n    undoable: PropTypes.bool,\n    validate: PropTypes.func,\n    sanitizeEmptyValues: PropTypes.bool,\n};\nexport var findTabsWithErrors = function (children, errors) {\n    console.warn('Deprecated. FormTab now wrap their content inside a FormGroupContextProvider. If you implemented custom forms with tabs, please use the FormGroupContextProvider. See https://marmelab.com/react-admin/CreateEdit.html#grouping-inputs');\n    return Children.toArray(children).reduce(function (acc, child) {\n        if (!isValidElement(child)) {\n            return acc;\n        }\n        var inputs = Children.toArray(child.props.children);\n        if (inputs.some(function (input) {\n            return isValidElement(input) && get(errors, input.props.source);\n        })) {\n            return __spreadArrays(acc, [child.props.label]);\n        }\n        return acc;\n    }, []);\n};\n"]},"metadata":{},"sourceType":"module"}