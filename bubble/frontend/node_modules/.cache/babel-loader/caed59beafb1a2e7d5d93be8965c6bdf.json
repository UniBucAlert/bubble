{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useForm } from 'react-final-form';\n/**\n * Reset the submission error when the corresponding field changes.\n * final-form doesn't do this by default.\n */\n\nvar useResetSubmitErrors = function () {\n  var form = useForm();\n  var prevValues = useRef(form.getState().values);\n  useEffect(function () {\n    var unsubscribe = form.subscribe(function (_a) {\n      var values = _a.values;\n      form.mutators.resetSubmitErrors({\n        current: values,\n        prev: prevValues.current\n      });\n      prevValues.current = values;\n    }, {\n      values: true\n    });\n    return unsubscribe;\n  }, [form]);\n};\n\nexport default useResetSubmitErrors;","map":{"version":3,"sources":["/node_modules/ra-core/esm/form/useResetSubmitErrors.js"],"names":["useEffect","useRef","useForm","useResetSubmitErrors","form","prevValues","getState","values","unsubscribe","subscribe","_a","mutators","resetSubmitErrors","current","prev"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB,GAAG,YAAY;AACnC,MAAIC,IAAI,GAAGF,OAAO,EAAlB;AACA,MAAIG,UAAU,GAAGJ,MAAM,CAACG,IAAI,CAACE,QAAL,GAAgBC,MAAjB,CAAvB;AACAP,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIQ,WAAW,GAAGJ,IAAI,CAACK,SAAL,CAAe,UAAUC,EAAV,EAAc;AAC3C,UAAIH,MAAM,GAAGG,EAAE,CAACH,MAAhB;AACAH,MAAAA,IAAI,CAACO,QAAL,CAAcC,iBAAd,CAAgC;AAC5BC,QAAAA,OAAO,EAAEN,MADmB;AAE5BO,QAAAA,IAAI,EAAET,UAAU,CAACQ;AAFW,OAAhC;AAIAR,MAAAA,UAAU,CAACQ,OAAX,GAAqBN,MAArB;AACH,KAPiB,EAOf;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAPe,CAAlB;AAQA,WAAOC,WAAP;AACH,GAVQ,EAUN,CAACJ,IAAD,CAVM,CAAT;AAWH,CAdD;;AAeA,eAAeD,oBAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useForm } from 'react-final-form';\n/**\n * Reset the submission error when the corresponding field changes.\n * final-form doesn't do this by default.\n */\nvar useResetSubmitErrors = function () {\n    var form = useForm();\n    var prevValues = useRef(form.getState().values);\n    useEffect(function () {\n        var unsubscribe = form.subscribe(function (_a) {\n            var values = _a.values;\n            form.mutators.resetSubmitErrors({\n                current: values,\n                prev: prevValues.current,\n            });\n            prevValues.current = values;\n        }, { values: true });\n        return unsubscribe;\n    }, [form]);\n};\nexport default useResetSubmitErrors;\n"]},"metadata":{},"sourceType":"module"}