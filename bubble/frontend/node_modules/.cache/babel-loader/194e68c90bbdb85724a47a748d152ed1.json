{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { isValidElement, Children, cloneElement, useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeListRestProps, useListContext, useVersion } from 'ra-core';\nimport { Checkbox, Table, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport classnames from 'classnames';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport DatagridHeaderCell from './DatagridHeaderCell';\nimport DatagridLoading from './DatagridLoading';\nimport DatagridBody, { PureDatagridBody } from './DatagridBody';\nimport useDatagridStyles from './useDatagridStyles';\nimport DatagridContextProvider from './DatagridContextProvider';\n/**\n * The Datagrid component renders a list of records as a table.\n * It is usually used as a child of the <List> and <ReferenceManyField> components.\n *\n * Props:\n *  - rowStyle\n *\n * @example Display all posts as a datagrid\n * const postRowStyle = (record, index) => ({\n *     backgroundColor: record.nb_views >= 500 ? '#efe' : 'white',\n * });\n * export const PostList = (props) => (\n *     <List {...props}>\n *         <Datagrid rowStyle={postRowStyle}>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <TextField source=\"body\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n *\n * @example Display all the comments of the current post as a datagrid\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"body\" />\n *         <DateField source=\"created_at\" />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceManyField>\n *\n *\n * @example Usage outside of a <List> or a <ReferenceManyField>.\n *\n * const currentSort = { field: 'published_at', order: 'DESC' };\n *\n * export const MyCustomList = (props) => {\n *     const { ids, data, total, loaded } = useGetList(\n *         'posts',\n *         { page: 1, perPage: 10 },\n *         currentSort\n *     );\n *\n *     return (\n *         <Datagrid\n *             basePath=\"\"\n *             currentSort={currentSort}\n *             data={data}\n *             ids={ids}\n *             selectedIds={[]}\n *             loaded={loaded}\n *             total={total}\n *             setSort={() => {\n *                 console.log('set sort');\n *             }}\n *             onSelect={() => {\n *                 console.log('on select');\n *             }}\n *             onToggleItem={() => {\n *                 console.log('on toggle item');\n *             }}\n *         >\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *         </Datagrid>\n *     );\n * }\n */\n\nvar Datagrid = React.forwardRef(function (props, ref) {\n  var classes = useDatagridStyles(props);\n\n  var _a = props.optimized,\n      optimized = _a === void 0 ? false : _a,\n      _b = props.body,\n      body = _b === void 0 ? optimized ? React.createElement(PureDatagridBody, null) : React.createElement(DatagridBody, null) : _b,\n      children = props.children,\n      classesOverride = props.classes,\n      className = props.className,\n      expand = props.expand,\n      _c = props.hasBulkActions,\n      hasBulkActions = _c === void 0 ? false : _c,\n      hover = props.hover,\n      isRowSelectable = props.isRowSelectable,\n      isRowExpandable = props.isRowExpandable,\n      resource = props.resource,\n      rowClick = props.rowClick,\n      rowStyle = props.rowStyle,\n      _d = props.size,\n      size = _d === void 0 ? 'small' : _d,\n      rest = __rest(props, [\"optimized\", \"body\", \"children\", \"classes\", \"className\", \"expand\", \"hasBulkActions\", \"hover\", \"isRowSelectable\", \"isRowExpandable\", \"resource\", \"rowClick\", \"rowStyle\", \"size\"]);\n\n  var _e = useListContext(props),\n      basePath = _e.basePath,\n      currentSort = _e.currentSort,\n      data = _e.data,\n      ids = _e.ids,\n      loaded = _e.loaded,\n      onSelect = _e.onSelect,\n      onToggleItem = _e.onToggleItem,\n      selectedIds = _e.selectedIds,\n      setSort = _e.setSort,\n      total = _e.total;\n\n  var version = useVersion();\n  var contextValue = useMemo(function () {\n    return {\n      isRowExpandable: isRowExpandable\n    };\n  }, [isRowExpandable]);\n  var updateSortCallback = useCallback(function (event) {\n    event.stopPropagation();\n    var newField = event.currentTarget.dataset.field;\n    var newOrder = currentSort.field === newField ? currentSort.order === 'ASC' ? 'DESC' : 'ASC' : event.currentTarget.dataset.order;\n    setSort(newField, newOrder);\n  }, [currentSort.field, currentSort.order, setSort]);\n  var updateSort = setSort ? updateSortCallback : null;\n  var handleSelectAll = useCallback(function (event) {\n    if (event.target.checked) {\n      var all_1 = ids.concat(selectedIds.filter(function (id) {\n        return !ids.includes(id);\n      }));\n      onSelect(isRowSelectable ? all_1.filter(function (id) {\n        return isRowSelectable(data[id]);\n      }) : all_1);\n    } else {\n      onSelect([]);\n    }\n  }, [data, ids, onSelect, isRowSelectable, selectedIds]);\n  var lastSelected = useRef(null);\n  useEffect(function () {\n    if (!selectedIds || selectedIds.length === 0) {\n      lastSelected.current = null;\n    }\n  }, [JSON.stringify(selectedIds)]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleToggleItem = useCallback(function (id, event) {\n    var lastSelectedIndex = ids.indexOf(lastSelected.current);\n    lastSelected.current = event.target.checked ? id : null;\n\n    if (event.shiftKey && lastSelectedIndex !== -1) {\n      var index = ids.indexOf(id);\n      var idsBetweenSelections = ids.slice(Math.min(lastSelectedIndex, index), Math.max(lastSelectedIndex, index) + 1);\n      var newSelectedIds = event.target.checked ? union(selectedIds, idsBetweenSelections) : difference(selectedIds, idsBetweenSelections);\n      onSelect(isRowSelectable ? newSelectedIds.filter(function (id) {\n        return isRowSelectable(data[id]);\n      }) : newSelectedIds);\n    } else {\n      onToggleItem(id);\n    }\n  }, [data, ids, isRowSelectable, onSelect, onToggleItem, selectedIds]);\n  /**\n   * if loaded is false, the list displays for the first time, and the dataProvider hasn't answered yet\n   * if loaded is true, the data for the list has at least been returned once by the dataProvider\n   * if loaded is undefined, the Datagrid parent doesn't track loading state (e.g. ReferenceArrayField)\n   */\n\n  if (loaded === false) {\n    return React.createElement(DatagridLoading, {\n      classes: classes,\n      className: className,\n      expand: expand,\n      hasBulkActions: hasBulkActions,\n      nbChildren: React.Children.count(children),\n      size: size\n    });\n  }\n  /**\n   * Once loaded, the data for the list may be empty. Instead of\n   * displaying the table header with zero data rows,\n   * the datagrid displays nothing in this case.\n   */\n\n\n  if (loaded && (ids.length === 0 || total === 0)) {\n    return null;\n  }\n\n  var all = isRowSelectable ? ids.filter(function (id) {\n    return isRowSelectable(data[id]);\n  }) : ids;\n  /**\n   * After the initial load, if the data for the list isn't empty,\n   * and even if the data is refreshing (e.g. after a filter change),\n   * the datagrid displays the current data.\n   */\n\n  return React.createElement(DatagridContextProvider, {\n    value: contextValue\n  }, React.createElement(Table, __assign({\n    ref: ref,\n    className: classnames(classes.table, className),\n    size: size\n  }, sanitizeListRestProps(rest)), React.createElement(TableHead, {\n    className: classes.thead\n  }, React.createElement(TableRow, {\n    className: classnames(classes.row, classes.headerRow)\n  }, expand && React.createElement(TableCell, {\n    padding: \"none\",\n    className: classnames(classes.headerCell, classes.expandHeader)\n  }), hasBulkActions && selectedIds && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: classes.headerCell\n  }, React.createElement(Checkbox, {\n    className: \"select-all\",\n    color: \"primary\",\n    checked: selectedIds.length > 0 && all.length > 0 && all.every(function (id) {\n      return selectedIds.includes(id);\n    }),\n    onChange: handleSelectAll\n  })), Children.map(children, function (field, index) {\n    return isValidElement(field) ? React.createElement(DatagridHeaderCell, {\n      className: classes.headerCell,\n      currentSort: currentSort,\n      field: field,\n      isSorting: currentSort.field === (field.props.sortBy || field.props.source),\n      key: field.props.source || index,\n      resource: resource,\n      updateSort: updateSort\n    }) : null;\n  }))), cloneElement(body, {\n    basePath: basePath,\n    className: classes.tbody,\n    classes: classes,\n    expand: expand,\n    rowClick: rowClick,\n    data: data,\n    hasBulkActions: hasBulkActions,\n    hover: hover,\n    ids: ids,\n    onToggleItem: handleToggleItem,\n    resource: resource,\n    rowStyle: rowStyle,\n    selectedIds: selectedIds,\n    isRowSelectable: isRowSelectable,\n    version: version\n  }, children)));\n});\nDatagrid.propTypes = {\n  basePath: PropTypes.string,\n  body: PropTypes.element,\n  children: PropTypes.node.isRequired,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  currentSort: PropTypes.exact({\n    field: PropTypes.string.isRequired,\n    order: PropTypes.string.isRequired\n  }),\n  data: PropTypes.any,\n  // @ts-ignore\n  expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n  hasBulkActions: PropTypes.bool,\n  hover: PropTypes.bool,\n  ids: PropTypes.arrayOf(PropTypes.any),\n  loading: PropTypes.bool,\n  onSelect: PropTypes.func,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  rowStyle: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  setSort: PropTypes.func,\n  total: PropTypes.number,\n  version: PropTypes.number,\n  isRowSelectable: PropTypes.func,\n  isRowExpandable: PropTypes.func\n};\nDatagrid.displayName = 'Datagrid';\nexport default Datagrid;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/list/datagrid/Datagrid.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","isValidElement","Children","cloneElement","useCallback","useRef","useEffect","useMemo","PropTypes","sanitizeListRestProps","useListContext","useVersion","Checkbox","Table","TableCell","TableHead","TableRow","classnames","union","difference","DatagridHeaderCell","DatagridLoading","DatagridBody","PureDatagridBody","useDatagridStyles","DatagridContextProvider","Datagrid","forwardRef","props","ref","classes","_a","optimized","_b","body","createElement","children","classesOverride","className","expand","_c","hasBulkActions","hover","isRowSelectable","isRowExpandable","resource","rowClick","rowStyle","_d","size","rest","_e","basePath","currentSort","data","ids","loaded","onSelect","onToggleItem","selectedIds","setSort","total","version","contextValue","updateSortCallback","event","stopPropagation","newField","currentTarget","dataset","field","newOrder","order","updateSort","handleSelectAll","target","checked","all_1","concat","filter","id","includes","lastSelected","current","JSON","stringify","handleToggleItem","lastSelectedIndex","shiftKey","index","idsBetweenSelections","slice","Math","min","max","newSelectedIds","nbChildren","count","all","value","table","thead","row","headerRow","padding","headerCell","expandHeader","color","every","onChange","map","isSorting","sortBy","source","key","tbody","propTypes","string","element","node","isRequired","object","exact","any","oneOfType","elementType","bool","arrayOf","loading","func","number","displayName"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;AACJ,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKgB,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,YAAnC,EAAiDC,WAAjD,EAA8DC,MAA9D,EAAsEC,SAAtE,EAAiFC,OAAjF,QAAiG,OAAjG;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,UAAhD,QAAmE,SAAnE;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAiE,mBAAjE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,IAAuBC,gBAAvB,QAA+C,gBAA/C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG1B,KAAK,CAAC2B,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAClD,MAAIC,OAAO,GAAGN,iBAAiB,CAACI,KAAD,CAA/B;;AACA,MAAIG,EAAE,GAAGH,KAAK,CAACI,SAAf;AAAA,MAA0BA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA9D;AAAA,MAAkEE,EAAE,GAAGL,KAAK,CAACM,IAA7E;AAAA,MAAmFA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBD,SAAS,GAAGhC,KAAK,CAACmC,aAAN,CAAoBZ,gBAApB,EAAsC,IAAtC,CAAH,GAAiDvB,KAAK,CAACmC,aAAN,CAAoBb,YAApB,EAAkC,IAAlC,CAA1E,GAAoHW,EAA9M;AAAA,MAAkNG,QAAQ,GAAGR,KAAK,CAACQ,QAAnO;AAAA,MAA6OC,eAAe,GAAGT,KAAK,CAACE,OAArQ;AAAA,MAA8QQ,SAAS,GAAGV,KAAK,CAACU,SAAhS;AAAA,MAA2SC,MAAM,GAAGX,KAAK,CAACW,MAA1T;AAAA,MAAkUC,EAAE,GAAGZ,KAAK,CAACa,cAA7U;AAAA,MAA6VA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAAtY;AAAA,MAA0YE,KAAK,GAAGd,KAAK,CAACc,KAAxZ;AAAA,MAA+ZC,eAAe,GAAGf,KAAK,CAACe,eAAvb;AAAA,MAAwcC,eAAe,GAAGhB,KAAK,CAACgB,eAAhe;AAAA,MAAifC,QAAQ,GAAGjB,KAAK,CAACiB,QAAlgB;AAAA,MAA4gBC,QAAQ,GAAGlB,KAAK,CAACkB,QAA7hB;AAAA,MAAuiBC,QAAQ,GAAGnB,KAAK,CAACmB,QAAxjB;AAAA,MAAkkBC,EAAE,GAAGpB,KAAK,CAACqB,IAA7kB;AAAA,MAAmlBA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAApnB;AAAA,MAAwnBE,IAAI,GAAGvD,MAAM,CAACiC,KAAD,EAAQ,CAAC,WAAD,EAAc,MAAd,EAAsB,UAAtB,EAAkC,SAAlC,EAA6C,WAA7C,EAA0D,QAA1D,EAAoE,gBAApE,EAAsF,OAAtF,EAA+F,iBAA/F,EAAkH,iBAAlH,EAAqI,UAArI,EAAiJ,UAAjJ,EAA6J,UAA7J,EAAyK,MAAzK,CAAR,CAAroB;;AACA,MAAIuB,EAAE,GAAGzC,cAAc,CAACkB,KAAD,CAAvB;AAAA,MAAgCwB,QAAQ,GAAGD,EAAE,CAACC,QAA9C;AAAA,MAAwDC,WAAW,GAAGF,EAAE,CAACE,WAAzE;AAAA,MAAsFC,IAAI,GAAGH,EAAE,CAACG,IAAhG;AAAA,MAAsGC,GAAG,GAAGJ,EAAE,CAACI,GAA/G;AAAA,MAAoHC,MAAM,GAAGL,EAAE,CAACK,MAAhI;AAAA,MAAwIC,QAAQ,GAAGN,EAAE,CAACM,QAAtJ;AAAA,MAAgKC,YAAY,GAAGP,EAAE,CAACO,YAAlL;AAAA,MAAgMC,WAAW,GAAGR,EAAE,CAACQ,WAAjN;AAAA,MAA8NC,OAAO,GAAGT,EAAE,CAACS,OAA3O;AAAA,MAAoPC,KAAK,GAAGV,EAAE,CAACU,KAA/P;;AACA,MAAIC,OAAO,GAAGnD,UAAU,EAAxB;AACA,MAAIoD,YAAY,GAAGxD,OAAO,CAAC,YAAY;AAAE,WAAQ;AAAEqC,MAAAA,eAAe,EAAEA;AAAnB,KAAR;AAAgD,GAA/D,EAAiE,CACvFA,eADuF,CAAjE,CAA1B;AAGA,MAAIoB,kBAAkB,GAAG5D,WAAW,CAAC,UAAU6D,KAAV,EAAiB;AAClDA,IAAAA,KAAK,CAACC,eAAN;AACA,QAAIC,QAAQ,GAAGF,KAAK,CAACG,aAAN,CAAoBC,OAApB,CAA4BC,KAA3C;AACA,QAAIC,QAAQ,GAAGlB,WAAW,CAACiB,KAAZ,KAAsBH,QAAtB,GACTd,WAAW,CAACmB,KAAZ,KAAsB,KAAtB,GACI,MADJ,GAEI,KAHK,GAITP,KAAK,CAACG,aAAN,CAAoBC,OAApB,CAA4BG,KAJlC;AAKAZ,IAAAA,OAAO,CAACO,QAAD,EAAWI,QAAX,CAAP;AACH,GATmC,EASjC,CAAClB,WAAW,CAACiB,KAAb,EAAoBjB,WAAW,CAACmB,KAAhC,EAAuCZ,OAAvC,CATiC,CAApC;AAUA,MAAIa,UAAU,GAAGb,OAAO,GAAGI,kBAAH,GAAwB,IAAhD;AACA,MAAIU,eAAe,GAAGtE,WAAW,CAAC,UAAU6D,KAAV,EAAiB;AAC/C,QAAIA,KAAK,CAACU,MAAN,CAAaC,OAAjB,EAA0B;AACtB,UAAIC,KAAK,GAAGtB,GAAG,CAACuB,MAAJ,CAAWnB,WAAW,CAACoB,MAAZ,CAAmB,UAAUC,EAAV,EAAc;AAAE,eAAO,CAACzB,GAAG,CAAC0B,QAAJ,CAAaD,EAAb,CAAR;AAA2B,OAA9D,CAAX,CAAZ;AACAvB,MAAAA,QAAQ,CAACd,eAAe,GAClBkC,KAAK,CAACE,MAAN,CAAa,UAAUC,EAAV,EAAc;AAAE,eAAOrC,eAAe,CAACW,IAAI,CAAC0B,EAAD,CAAL,CAAtB;AAAmC,OAAhE,CADkB,GAElBH,KAFE,CAAR;AAGH,KALD,MAMK;AACDpB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAVgC,EAU9B,CAACH,IAAD,EAAOC,GAAP,EAAYE,QAAZ,EAAsBd,eAAtB,EAAuCgB,WAAvC,CAV8B,CAAjC;AAWA,MAAIuB,YAAY,GAAG7E,MAAM,CAAC,IAAD,CAAzB;AACAC,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACqD,WAAD,IAAgBA,WAAW,CAACtE,MAAZ,KAAuB,CAA3C,EAA8C;AAC1C6F,MAAAA,YAAY,CAACC,OAAb,GAAuB,IAAvB;AACH;AACJ,GAJQ,EAIN,CAACC,IAAI,CAACC,SAAL,CAAe1B,WAAf,CAAD,CAJM,CAAT,CA/BkD,CAmCf;;AACnC,MAAI2B,gBAAgB,GAAGlF,WAAW,CAAC,UAAU4E,EAAV,EAAcf,KAAd,EAAqB;AACpD,QAAIsB,iBAAiB,GAAGhC,GAAG,CAAC1D,OAAJ,CAAYqF,YAAY,CAACC,OAAzB,CAAxB;AACAD,IAAAA,YAAY,CAACC,OAAb,GAAuBlB,KAAK,CAACU,MAAN,CAAaC,OAAb,GAAuBI,EAAvB,GAA4B,IAAnD;;AACA,QAAIf,KAAK,CAACuB,QAAN,IAAkBD,iBAAiB,KAAK,CAAC,CAA7C,EAAgD;AAC5C,UAAIE,KAAK,GAAGlC,GAAG,CAAC1D,OAAJ,CAAYmF,EAAZ,CAAZ;AACA,UAAIU,oBAAoB,GAAGnC,GAAG,CAACoC,KAAJ,CAAUC,IAAI,CAACC,GAAL,CAASN,iBAAT,EAA4BE,KAA5B,CAAV,EAA8CG,IAAI,CAACE,GAAL,CAASP,iBAAT,EAA4BE,KAA5B,IAAqC,CAAnF,CAA3B;AACA,UAAIM,cAAc,GAAG9B,KAAK,CAACU,MAAN,CAAaC,OAAb,GACf1D,KAAK,CAACyC,WAAD,EAAc+B,oBAAd,CADU,GAEfvE,UAAU,CAACwC,WAAD,EAAc+B,oBAAd,CAFhB;AAGAjC,MAAAA,QAAQ,CAACd,eAAe,GAClBoD,cAAc,CAAChB,MAAf,CAAsB,UAAUC,EAAV,EAAc;AAClC,eAAOrC,eAAe,CAACW,IAAI,CAAC0B,EAAD,CAAL,CAAtB;AACH,OAFC,CADkB,GAIlBe,cAJE,CAAR;AAKH,KAXD,MAYK;AACDrC,MAAAA,YAAY,CAACsB,EAAD,CAAZ;AACH;AACJ,GAlBiC,EAkB/B,CAAC1B,IAAD,EAAOC,GAAP,EAAYZ,eAAZ,EAA6Bc,QAA7B,EAAuCC,YAAvC,EAAqDC,WAArD,CAlB+B,CAAlC;AAmBA;AACJ;AACA;AACA;AACA;;AACI,MAAIH,MAAM,KAAK,KAAf,EAAsB;AAClB,WAAQxD,KAAK,CAACmC,aAAN,CAAoBd,eAApB,EAAqC;AAAES,MAAAA,OAAO,EAAEA,OAAX;AAAoBQ,MAAAA,SAAS,EAAEA,SAA/B;AAA0CC,MAAAA,MAAM,EAAEA,MAAlD;AAA0DE,MAAAA,cAAc,EAAEA,cAA1E;AAA0FuD,MAAAA,UAAU,EAAEhG,KAAK,CAACE,QAAN,CAAe+F,KAAf,CAAqB7D,QAArB,CAAtG;AAAsIa,MAAAA,IAAI,EAAEA;AAA5I,KAArC,CAAR;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI,MAAIO,MAAM,KAAKD,GAAG,CAAClE,MAAJ,KAAe,CAAf,IAAoBwE,KAAK,KAAK,CAAnC,CAAV,EAAiD;AAC7C,WAAO,IAAP;AACH;;AACD,MAAIqC,GAAG,GAAGvD,eAAe,GACnBY,GAAG,CAACwB,MAAJ,CAAW,UAAUC,EAAV,EAAc;AAAE,WAAOrC,eAAe,CAACW,IAAI,CAAC0B,EAAD,CAAL,CAAtB;AAAmC,GAA9D,CADmB,GAEnBzB,GAFN;AAGA;AACJ;AACA;AACA;AACA;;AACI,SAAQvD,KAAK,CAACmC,aAAN,CAAoBV,uBAApB,EAA6C;AAAE0E,IAAAA,KAAK,EAAEpC;AAAT,GAA7C,EACJ/D,KAAK,CAACmC,aAAN,CAAoBtB,KAApB,EAA2BhC,QAAQ,CAAC;AAAEgD,IAAAA,GAAG,EAAEA,GAAP;AAAYS,IAAAA,SAAS,EAAErB,UAAU,CAACa,OAAO,CAACsE,KAAT,EAAgB9D,SAAhB,CAAjC;AAA6DW,IAAAA,IAAI,EAAEA;AAAnE,GAAD,EAA4ExC,qBAAqB,CAACyC,IAAD,CAAjG,CAAnC,EACIlD,KAAK,CAACmC,aAAN,CAAoBpB,SAApB,EAA+B;AAAEuB,IAAAA,SAAS,EAAER,OAAO,CAACuE;AAArB,GAA/B,EACIrG,KAAK,CAACmC,aAAN,CAAoBnB,QAApB,EAA8B;AAAEsB,IAAAA,SAAS,EAAErB,UAAU,CAACa,OAAO,CAACwE,GAAT,EAAcxE,OAAO,CAACyE,SAAtB;AAAvB,GAA9B,EACIhE,MAAM,IAAKvC,KAAK,CAACmC,aAAN,CAAoBrB,SAApB,EAA+B;AAAE0F,IAAAA,OAAO,EAAE,MAAX;AAAmBlE,IAAAA,SAAS,EAAErB,UAAU,CAACa,OAAO,CAAC2E,UAAT,EAAqB3E,OAAO,CAAC4E,YAA7B;AAAxC,GAA/B,CADf,EAEIjE,cAAc,IAAIkB,WAAlB,IAAkC3D,KAAK,CAACmC,aAAN,CAAoBrB,SAApB,EAA+B;AAAE0F,IAAAA,OAAO,EAAE,UAAX;AAAuBlE,IAAAA,SAAS,EAAER,OAAO,CAAC2E;AAA1C,GAA/B,EAC9BzG,KAAK,CAACmC,aAAN,CAAoBvB,QAApB,EAA8B;AAAE0B,IAAAA,SAAS,EAAE,YAAb;AAA2BqE,IAAAA,KAAK,EAAE,SAAlC;AAA6C/B,IAAAA,OAAO,EAAEjB,WAAW,CAACtE,MAAZ,GAAqB,CAArB,IAC5E6G,GAAG,CAAC7G,MAAJ,GAAa,CAD+D,IAE5E6G,GAAG,CAACU,KAAJ,CAAU,UAAU5B,EAAV,EAAc;AACpB,aAAOrB,WAAW,CAACsB,QAAZ,CAAqBD,EAArB,CAAP;AACH,KAFD,CAFsB;AAIlB6B,IAAAA,QAAQ,EAAEnC;AAJQ,GAA9B,CAD8B,CAFtC,EAQIxE,QAAQ,CAAC4G,GAAT,CAAa1E,QAAb,EAAuB,UAAUkC,KAAV,EAAiBmB,KAAjB,EAAwB;AAC3C,WAAOxF,cAAc,CAACqE,KAAD,CAAd,GAAyBtE,KAAK,CAACmC,aAAN,CAAoBf,kBAApB,EAAwC;AAAEkB,MAAAA,SAAS,EAAER,OAAO,CAAC2E,UAArB;AAAiCpD,MAAAA,WAAW,EAAEA,WAA9C;AAA2DiB,MAAAA,KAAK,EAAEA,KAAlE;AAAyEyC,MAAAA,SAAS,EAAE1D,WAAW,CAACiB,KAAZ,MACnJA,KAAK,CAAC1C,KAAN,CAAYoF,MAAZ,IACG1C,KAAK,CAAC1C,KAAN,CAAYqF,MAFoI,CAApF;AAEvCC,MAAAA,GAAG,EAAE5C,KAAK,CAAC1C,KAAN,CAAYqF,MAAZ,IAAsBxB,KAFY;AAEL5C,MAAAA,QAAQ,EAAEA,QAFL;AAEe4B,MAAAA,UAAU,EAAEA;AAF3B,KAAxC,CAAzB,GAE6G,IAFpH;AAGH,GAJD,CARJ,CADJ,CADJ,EAeItE,YAAY,CAAC+B,IAAD,EAAO;AACfkB,IAAAA,QAAQ,EAAEA,QADK;AAEfd,IAAAA,SAAS,EAAER,OAAO,CAACqF,KAFJ;AAGfrF,IAAAA,OAAO,EAAEA,OAHM;AAIfS,IAAAA,MAAM,EAAEA,MAJO;AAKfO,IAAAA,QAAQ,EAAEA,QALK;AAMfQ,IAAAA,IAAI,EAAEA,IANS;AAOfb,IAAAA,cAAc,EAAEA,cAPD;AAQfC,IAAAA,KAAK,EAAEA,KARQ;AASfa,IAAAA,GAAG,EAAEA,GATU;AAUfG,IAAAA,YAAY,EAAE4B,gBAVC;AAWfzC,IAAAA,QAAQ,EAAEA,QAXK;AAYfE,IAAAA,QAAQ,EAAEA,QAZK;AAafY,IAAAA,WAAW,EAAEA,WAbE;AAcfhB,IAAAA,eAAe,EAAEA,eAdF;AAefmB,IAAAA,OAAO,EAAEA;AAfM,GAAP,EAgBT1B,QAhBS,CAfhB,CADI,CAAR;AAiCH,CAhHc,CAAf;AAiHAV,QAAQ,CAAC0F,SAAT,GAAqB;AACjBhE,EAAAA,QAAQ,EAAE5C,SAAS,CAAC6G,MADH;AAEjBnF,EAAAA,IAAI,EAAE1B,SAAS,CAAC8G,OAFC;AAGjBlF,EAAAA,QAAQ,EAAE5B,SAAS,CAAC+G,IAAV,CAAeC,UAHR;AAIjB1F,EAAAA,OAAO,EAAEtB,SAAS,CAACiH,MAJF;AAKjBnF,EAAAA,SAAS,EAAE9B,SAAS,CAAC6G,MALJ;AAMjBhE,EAAAA,WAAW,EAAE7C,SAAS,CAACkH,KAAV,CAAgB;AACzBpD,IAAAA,KAAK,EAAE9D,SAAS,CAAC6G,MAAV,CAAiBG,UADC;AAEzBhD,IAAAA,KAAK,EAAEhE,SAAS,CAAC6G,MAAV,CAAiBG;AAFC,GAAhB,CANI;AAUjBlE,EAAAA,IAAI,EAAE9C,SAAS,CAACmH,GAVC;AAWjB;AACApF,EAAAA,MAAM,EAAE/B,SAAS,CAACoH,SAAV,CAAoB,CAACpH,SAAS,CAAC8G,OAAX,EAAoB9G,SAAS,CAACqH,WAA9B,CAApB,CAZS;AAajBpF,EAAAA,cAAc,EAAEjC,SAAS,CAACsH,IAbT;AAcjBpF,EAAAA,KAAK,EAAElC,SAAS,CAACsH,IAdA;AAejBvE,EAAAA,GAAG,EAAE/C,SAAS,CAACuH,OAAV,CAAkBvH,SAAS,CAACmH,GAA5B,CAfY;AAgBjBK,EAAAA,OAAO,EAAExH,SAAS,CAACsH,IAhBF;AAiBjBrE,EAAAA,QAAQ,EAAEjD,SAAS,CAACyH,IAjBH;AAkBjBvE,EAAAA,YAAY,EAAElD,SAAS,CAACyH,IAlBP;AAmBjBpF,EAAAA,QAAQ,EAAErC,SAAS,CAAC6G,MAnBH;AAoBjBvE,EAAAA,QAAQ,EAAEtC,SAAS,CAACoH,SAAV,CAAoB,CAACpH,SAAS,CAAC6G,MAAX,EAAmB7G,SAAS,CAACyH,IAA7B,CAApB,CApBO;AAqBjBlF,EAAAA,QAAQ,EAAEvC,SAAS,CAACyH,IArBH;AAsBjBtE,EAAAA,WAAW,EAAEnD,SAAS,CAACuH,OAAV,CAAkBvH,SAAS,CAACmH,GAA5B,CAtBI;AAuBjB/D,EAAAA,OAAO,EAAEpD,SAAS,CAACyH,IAvBF;AAwBjBpE,EAAAA,KAAK,EAAErD,SAAS,CAAC0H,MAxBA;AAyBjBpE,EAAAA,OAAO,EAAEtD,SAAS,CAAC0H,MAzBF;AA0BjBvF,EAAAA,eAAe,EAAEnC,SAAS,CAACyH,IA1BV;AA2BjBrF,EAAAA,eAAe,EAAEpC,SAAS,CAACyH;AA3BV,CAArB;AA6BAvG,QAAQ,CAACyG,WAAT,GAAuB,UAAvB;AACA,eAAezG,QAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { isValidElement, Children, cloneElement, useCallback, useRef, useEffect, useMemo, } from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeListRestProps, useListContext, useVersion, } from 'ra-core';\nimport { Checkbox, Table, TableCell, TableHead, TableRow, } from '@material-ui/core';\nimport classnames from 'classnames';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport DatagridHeaderCell from './DatagridHeaderCell';\nimport DatagridLoading from './DatagridLoading';\nimport DatagridBody, { PureDatagridBody } from './DatagridBody';\nimport useDatagridStyles from './useDatagridStyles';\nimport DatagridContextProvider from './DatagridContextProvider';\n/**\n * The Datagrid component renders a list of records as a table.\n * It is usually used as a child of the <List> and <ReferenceManyField> components.\n *\n * Props:\n *  - rowStyle\n *\n * @example Display all posts as a datagrid\n * const postRowStyle = (record, index) => ({\n *     backgroundColor: record.nb_views >= 500 ? '#efe' : 'white',\n * });\n * export const PostList = (props) => (\n *     <List {...props}>\n *         <Datagrid rowStyle={postRowStyle}>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <TextField source=\"body\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n *\n * @example Display all the comments of the current post as a datagrid\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"body\" />\n *         <DateField source=\"created_at\" />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceManyField>\n *\n *\n * @example Usage outside of a <List> or a <ReferenceManyField>.\n *\n * const currentSort = { field: 'published_at', order: 'DESC' };\n *\n * export const MyCustomList = (props) => {\n *     const { ids, data, total, loaded } = useGetList(\n *         'posts',\n *         { page: 1, perPage: 10 },\n *         currentSort\n *     );\n *\n *     return (\n *         <Datagrid\n *             basePath=\"\"\n *             currentSort={currentSort}\n *             data={data}\n *             ids={ids}\n *             selectedIds={[]}\n *             loaded={loaded}\n *             total={total}\n *             setSort={() => {\n *                 console.log('set sort');\n *             }}\n *             onSelect={() => {\n *                 console.log('on select');\n *             }}\n *             onToggleItem={() => {\n *                 console.log('on toggle item');\n *             }}\n *         >\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *         </Datagrid>\n *     );\n * }\n */\nvar Datagrid = React.forwardRef(function (props, ref) {\n    var classes = useDatagridStyles(props);\n    var _a = props.optimized, optimized = _a === void 0 ? false : _a, _b = props.body, body = _b === void 0 ? optimized ? React.createElement(PureDatagridBody, null) : React.createElement(DatagridBody, null) : _b, children = props.children, classesOverride = props.classes, className = props.className, expand = props.expand, _c = props.hasBulkActions, hasBulkActions = _c === void 0 ? false : _c, hover = props.hover, isRowSelectable = props.isRowSelectable, isRowExpandable = props.isRowExpandable, resource = props.resource, rowClick = props.rowClick, rowStyle = props.rowStyle, _d = props.size, size = _d === void 0 ? 'small' : _d, rest = __rest(props, [\"optimized\", \"body\", \"children\", \"classes\", \"className\", \"expand\", \"hasBulkActions\", \"hover\", \"isRowSelectable\", \"isRowExpandable\", \"resource\", \"rowClick\", \"rowStyle\", \"size\"]);\n    var _e = useListContext(props), basePath = _e.basePath, currentSort = _e.currentSort, data = _e.data, ids = _e.ids, loaded = _e.loaded, onSelect = _e.onSelect, onToggleItem = _e.onToggleItem, selectedIds = _e.selectedIds, setSort = _e.setSort, total = _e.total;\n    var version = useVersion();\n    var contextValue = useMemo(function () { return ({ isRowExpandable: isRowExpandable }); }, [\n        isRowExpandable,\n    ]);\n    var updateSortCallback = useCallback(function (event) {\n        event.stopPropagation();\n        var newField = event.currentTarget.dataset.field;\n        var newOrder = currentSort.field === newField\n            ? currentSort.order === 'ASC'\n                ? 'DESC'\n                : 'ASC'\n            : event.currentTarget.dataset.order;\n        setSort(newField, newOrder);\n    }, [currentSort.field, currentSort.order, setSort]);\n    var updateSort = setSort ? updateSortCallback : null;\n    var handleSelectAll = useCallback(function (event) {\n        if (event.target.checked) {\n            var all_1 = ids.concat(selectedIds.filter(function (id) { return !ids.includes(id); }));\n            onSelect(isRowSelectable\n                ? all_1.filter(function (id) { return isRowSelectable(data[id]); })\n                : all_1);\n        }\n        else {\n            onSelect([]);\n        }\n    }, [data, ids, onSelect, isRowSelectable, selectedIds]);\n    var lastSelected = useRef(null);\n    useEffect(function () {\n        if (!selectedIds || selectedIds.length === 0) {\n            lastSelected.current = null;\n        }\n    }, [JSON.stringify(selectedIds)]); // eslint-disable-line react-hooks/exhaustive-deps\n    var handleToggleItem = useCallback(function (id, event) {\n        var lastSelectedIndex = ids.indexOf(lastSelected.current);\n        lastSelected.current = event.target.checked ? id : null;\n        if (event.shiftKey && lastSelectedIndex !== -1) {\n            var index = ids.indexOf(id);\n            var idsBetweenSelections = ids.slice(Math.min(lastSelectedIndex, index), Math.max(lastSelectedIndex, index) + 1);\n            var newSelectedIds = event.target.checked\n                ? union(selectedIds, idsBetweenSelections)\n                : difference(selectedIds, idsBetweenSelections);\n            onSelect(isRowSelectable\n                ? newSelectedIds.filter(function (id) {\n                    return isRowSelectable(data[id]);\n                })\n                : newSelectedIds);\n        }\n        else {\n            onToggleItem(id);\n        }\n    }, [data, ids, isRowSelectable, onSelect, onToggleItem, selectedIds]);\n    /**\n     * if loaded is false, the list displays for the first time, and the dataProvider hasn't answered yet\n     * if loaded is true, the data for the list has at least been returned once by the dataProvider\n     * if loaded is undefined, the Datagrid parent doesn't track loading state (e.g. ReferenceArrayField)\n     */\n    if (loaded === false) {\n        return (React.createElement(DatagridLoading, { classes: classes, className: className, expand: expand, hasBulkActions: hasBulkActions, nbChildren: React.Children.count(children), size: size }));\n    }\n    /**\n     * Once loaded, the data for the list may be empty. Instead of\n     * displaying the table header with zero data rows,\n     * the datagrid displays nothing in this case.\n     */\n    if (loaded && (ids.length === 0 || total === 0)) {\n        return null;\n    }\n    var all = isRowSelectable\n        ? ids.filter(function (id) { return isRowSelectable(data[id]); })\n        : ids;\n    /**\n     * After the initial load, if the data for the list isn't empty,\n     * and even if the data is refreshing (e.g. after a filter change),\n     * the datagrid displays the current data.\n     */\n    return (React.createElement(DatagridContextProvider, { value: contextValue },\n        React.createElement(Table, __assign({ ref: ref, className: classnames(classes.table, className), size: size }, sanitizeListRestProps(rest)),\n            React.createElement(TableHead, { className: classes.thead },\n                React.createElement(TableRow, { className: classnames(classes.row, classes.headerRow) },\n                    expand && (React.createElement(TableCell, { padding: \"none\", className: classnames(classes.headerCell, classes.expandHeader) })),\n                    hasBulkActions && selectedIds && (React.createElement(TableCell, { padding: \"checkbox\", className: classes.headerCell },\n                        React.createElement(Checkbox, { className: \"select-all\", color: \"primary\", checked: selectedIds.length > 0 &&\n                                all.length > 0 &&\n                                all.every(function (id) {\n                                    return selectedIds.includes(id);\n                                }), onChange: handleSelectAll }))),\n                    Children.map(children, function (field, index) {\n                        return isValidElement(field) ? (React.createElement(DatagridHeaderCell, { className: classes.headerCell, currentSort: currentSort, field: field, isSorting: currentSort.field ===\n                                (field.props.sortBy ||\n                                    field.props.source), key: field.props.source || index, resource: resource, updateSort: updateSort })) : null;\n                    }))),\n            cloneElement(body, {\n                basePath: basePath,\n                className: classes.tbody,\n                classes: classes,\n                expand: expand,\n                rowClick: rowClick,\n                data: data,\n                hasBulkActions: hasBulkActions,\n                hover: hover,\n                ids: ids,\n                onToggleItem: handleToggleItem,\n                resource: resource,\n                rowStyle: rowStyle,\n                selectedIds: selectedIds,\n                isRowSelectable: isRowSelectable,\n                version: version,\n            }, children))));\n});\nDatagrid.propTypes = {\n    basePath: PropTypes.string,\n    body: PropTypes.element,\n    children: PropTypes.node.isRequired,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    currentSort: PropTypes.exact({\n        field: PropTypes.string.isRequired,\n        order: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.any,\n    // @ts-ignore\n    expand: PropTypes.oneOfType([PropTypes.element, PropTypes.elementType]),\n    hasBulkActions: PropTypes.bool,\n    hover: PropTypes.bool,\n    ids: PropTypes.arrayOf(PropTypes.any),\n    loading: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onToggleItem: PropTypes.func,\n    resource: PropTypes.string,\n    rowClick: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    rowStyle: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    setSort: PropTypes.func,\n    total: PropTypes.number,\n    version: PropTypes.number,\n    isRowSelectable: PropTypes.func,\n    isRowExpandable: PropTypes.func,\n};\nDatagrid.displayName = 'Datagrid';\nexport default Datagrid;\n"]},"metadata":{},"sourceType":"module"}