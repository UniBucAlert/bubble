{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowContextProvider, ResourceContextProvider, useCheckMinimumRequiredProps, useShowController } from 'ra-core';\nimport { ShowView } from './ShowView';\n/**\n * Page component for the Show view\n *\n * The `<Show>` component renders the page title and actions,\n * fetches the record from the data provider.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleShowLayout>`),\n * to which it passes the `record` as prop.\n *\n * The <Show> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = (props) => (\n *     <Show {...props}>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n */\n\nexport var Show = function (props) {\n  useCheckMinimumRequiredProps('Show', ['children'], props);\n  var controllerProps = useShowController(props);\n  var body = React.createElement(ShowContextProvider, {\n    value: controllerProps\n  }, React.createElement(ShowView, __assign({}, props, controllerProps)));\n  return props.resource ? // support resource override via props\n  React.createElement(ResourceContextProvider, {\n    value: props.resource\n  }, body) : body;\n};\nShow.propTypes = {\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  aside: PropTypes.element,\n  children: PropTypes.element,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  hasCreate: PropTypes.bool,\n  hasEdit: PropTypes.bool,\n  hasList: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  id: PropTypes.any.isRequired,\n  resource: PropTypes.string,\n  title: PropTypes.node\n};","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/detail/Show.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","PropTypes","ShowContextProvider","ResourceContextProvider","useCheckMinimumRequiredProps","useShowController","ShowView","Show","props","controllerProps","body","createElement","value","resource","propTypes","actions","oneOfType","element","bool","aside","children","classes","object","className","string","hasCreate","hasEdit","hasList","hasShow","id","any","isRequired","title","node"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShowContextProvider, ResourceContextProvider, useCheckMinimumRequiredProps, useShowController, } from 'ra-core';\nimport { ShowView } from './ShowView';\n/**\n * Page component for the Show view\n *\n * The `<Show>` component renders the page title and actions,\n * fetches the record from the data provider.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleShowLayout>`),\n * to which it passes the `record` as prop.\n *\n * The <Show> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = (props) => (\n *     <Show {...props}>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n * export default App;\n */\nexport var Show = function (props) {\n    useCheckMinimumRequiredProps('Show', ['children'], props);\n    var controllerProps = useShowController(props);\n    var body = (React.createElement(ShowContextProvider, { value: controllerProps },\n        React.createElement(ShowView, __assign({}, props, controllerProps))));\n    return props.resource ? (\n    // support resource override via props\n    React.createElement(ResourceContextProvider, { value: props.resource }, body)) : (body);\n};\nShow.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    aside: PropTypes.element,\n    children: PropTypes.element,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    hasCreate: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasList: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    id: PropTypes.any.isRequired,\n    resource: PropTypes.string,\n    title: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}