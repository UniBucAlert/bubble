{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { getResultFromCache } from '../replyWithCache';\nimport getFetchType from '../getFetchType';\nimport { FETCH_END } from '../../actions/fetchActions';\nexport var answerWithCache = function (_a) {\n  var type = _a.type,\n      payload = _a.payload,\n      resource = _a.resource,\n      action = _a.action,\n      rest = _a.rest,\n      onSuccess = _a.onSuccess,\n      resourceState = _a.resourceState,\n      dispatch = _a.dispatch;\n  dispatch({\n    type: action,\n    payload: payload,\n    meta: __assign({\n      resource: resource\n    }, rest)\n  });\n  var response = getResultFromCache(type, payload, resourceState);\n  dispatch({\n    type: action + \"_SUCCESS\",\n    payload: response,\n    requestPayload: payload,\n    meta: __assign(__assign({}, rest), {\n      resource: resource,\n      fetchResponse: getFetchType(type),\n      fetchStatus: FETCH_END,\n      fromCache: true\n    })\n  });\n  onSuccess && onSuccess(response);\n  return Promise.resolve(response);\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/dataProvider/performQuery/answerWithCache.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","getResultFromCache","getFetchType","FETCH_END","answerWithCache","_a","type","payload","resource","action","rest","onSuccess","resourceState","dispatch","meta","response","requestPayload","fetchResponse","fetchStatus","fromCache","Promise","resolve"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,kBAAT,QAAmC,mBAAnC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAO,IAAIC,eAAe,GAAG,UAAUC,EAAV,EAAc;AACvC,MAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;AAAA,MAAoBC,OAAO,GAAGF,EAAE,CAACE,OAAjC;AAAA,MAA0CC,QAAQ,GAAGH,EAAE,CAACG,QAAxD;AAAA,MAAkEC,MAAM,GAAGJ,EAAE,CAACI,MAA9E;AAAA,MAAsFC,IAAI,GAAGL,EAAE,CAACK,IAAhG;AAAA,MAAsGC,SAAS,GAAGN,EAAE,CAACM,SAArH;AAAA,MAAgIC,aAAa,GAAGP,EAAE,CAACO,aAAnJ;AAAA,MAAkKC,QAAQ,GAAGR,EAAE,CAACQ,QAAhL;AACAA,EAAAA,QAAQ,CAAC;AACLP,IAAAA,IAAI,EAAEG,MADD;AAELF,IAAAA,OAAO,EAAEA,OAFJ;AAGLO,IAAAA,IAAI,EAAE3B,QAAQ,CAAC;AAAEqB,MAAAA,QAAQ,EAAEA;AAAZ,KAAD,EAAyBE,IAAzB;AAHT,GAAD,CAAR;AAKA,MAAIK,QAAQ,GAAGd,kBAAkB,CAACK,IAAD,EAAOC,OAAP,EAAgBK,aAAhB,CAAjC;AACAC,EAAAA,QAAQ,CAAC;AACLP,IAAAA,IAAI,EAAEG,MAAM,GAAG,UADV;AAELF,IAAAA,OAAO,EAAEQ,QAFJ;AAGLC,IAAAA,cAAc,EAAET,OAHX;AAILO,IAAAA,IAAI,EAAE3B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuB,IAAL,CAAT,EAAqB;AAAEF,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBS,MAAAA,aAAa,EAAEf,YAAY,CAACI,IAAD,CAAjD;AAAyDY,MAAAA,WAAW,EAAEf,SAAtE;AAAiFgB,MAAAA,SAAS,EAAE;AAA5F,KAArB;AAJT,GAAD,CAAR;AAMAR,EAAAA,SAAS,IAAIA,SAAS,CAACI,QAAD,CAAtB;AACA,SAAOK,OAAO,CAACC,OAAR,CAAgBN,QAAhB,CAAP;AACH,CAhBM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { getResultFromCache } from '../replyWithCache';\nimport getFetchType from '../getFetchType';\nimport { FETCH_END } from '../../actions/fetchActions';\nexport var answerWithCache = function (_a) {\n    var type = _a.type, payload = _a.payload, resource = _a.resource, action = _a.action, rest = _a.rest, onSuccess = _a.onSuccess, resourceState = _a.resourceState, dispatch = _a.dispatch;\n    dispatch({\n        type: action,\n        payload: payload,\n        meta: __assign({ resource: resource }, rest),\n    });\n    var response = getResultFromCache(type, payload, resourceState);\n    dispatch({\n        type: action + \"_SUCCESS\",\n        payload: response,\n        requestPayload: payload,\n        meta: __assign(__assign({}, rest), { resource: resource, fetchResponse: getFetchType(type), fetchStatus: FETCH_END, fromCache: true }),\n    });\n    onSuccess && onSuccess(response);\n    return Promise.resolve(response);\n};\n"]},"metadata":{},"sourceType":"module"}