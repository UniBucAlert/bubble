{"ast":null,"code":"import * as React from 'react';\nimport AdminContext from './AdminContext';\nimport AdminUI from './AdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\n\nvar Admin = function (_a) {\n  var appLayout = _a.appLayout,\n      authProvider = _a.authProvider,\n      catchAll = _a.catchAll,\n      children = _a.children,\n      customReducers = _a.customReducers,\n      _b = _a.customRoutes,\n      customRoutes = _b === void 0 ? [] : _b,\n      customSagas = _a.customSagas,\n      dashboard = _a.dashboard,\n      dataProvider = _a.dataProvider,\n      disableTelemetry = _a.disableTelemetry,\n      history = _a.history,\n      i18nProvider = _a.i18nProvider,\n      initialState = _a.initialState,\n      layout = _a.layout,\n      loading = _a.loading,\n      locale = _a.locale,\n      loginPage = _a.loginPage,\n      logoutButton = _a.logoutButton,\n      menu = _a.menu,\n      // deprecated, use a custom layout instead\n  ready = _a.ready,\n      theme = _a.theme,\n      _c = _a.title,\n      title = _c === void 0 ? 'React Admin' : _c;\n\n  if (appLayout && process.env.NODE_ENV !== 'production') {\n    console.warn('You are using deprecated prop \"appLayout\", it was replaced by \"layout\", see https://github.com/marmelab/react-admin/issues/2918');\n  }\n\n  if (loginPage === true && process.env.NODE_ENV !== 'production') {\n    console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n  }\n\n  if (locale && process.env.NODE_ENV !== 'production') {\n    console.warn('You are using deprecated prop \"locale\". You must now pass the initial locale to your i18nProvider');\n  }\n\n  return React.createElement(AdminContext, {\n    authProvider: authProvider,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    history: history,\n    customReducers: customReducers,\n    customSagas: customSagas,\n    initialState: initialState\n  }, React.createElement(AdminUI, {\n    layout: appLayout || layout,\n    customRoutes: customRoutes,\n    dashboard: dashboard,\n    disableTelemetry: disableTelemetry,\n    menu: menu,\n    catchAll: catchAll,\n    theme: theme,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    logout: authProvider ? logoutButton : undefined,\n    ready: ready\n  }, children));\n};\n\nexport default Admin;","map":{"version":3,"sources":["/node_modules/react-admin/esm/Admin.js"],"names":["React","AdminContext","AdminUI","Admin","_a","appLayout","authProvider","catchAll","children","customReducers","_b","customRoutes","customSagas","dashboard","dataProvider","disableTelemetry","history","i18nProvider","initialState","layout","loading","locale","loginPage","logoutButton","menu","ready","theme","_c","title","process","env","NODE_ENV","console","warn","createElement","logout","undefined"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AdminContext from './AdminContext';\nimport AdminUI from './AdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\nvar Admin = function (_a) {\n    var appLayout = _a.appLayout, authProvider = _a.authProvider, catchAll = _a.catchAll, children = _a.children, customReducers = _a.customReducers, _b = _a.customRoutes, customRoutes = _b === void 0 ? [] : _b, customSagas = _a.customSagas, dashboard = _a.dashboard, dataProvider = _a.dataProvider, disableTelemetry = _a.disableTelemetry, history = _a.history, i18nProvider = _a.i18nProvider, initialState = _a.initialState, layout = _a.layout, loading = _a.loading, locale = _a.locale, loginPage = _a.loginPage, logoutButton = _a.logoutButton, menu = _a.menu, // deprecated, use a custom layout instead\n    ready = _a.ready, theme = _a.theme, _c = _a.title, title = _c === void 0 ? 'React Admin' : _c;\n    if (appLayout && process.env.NODE_ENV !== 'production') {\n        console.warn('You are using deprecated prop \"appLayout\", it was replaced by \"layout\", see https://github.com/marmelab/react-admin/issues/2918');\n    }\n    if (loginPage === true && process.env.NODE_ENV !== 'production') {\n        console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n    }\n    if (locale && process.env.NODE_ENV !== 'production') {\n        console.warn('You are using deprecated prop \"locale\". You must now pass the initial locale to your i18nProvider');\n    }\n    return (React.createElement(AdminContext, { authProvider: authProvider, dataProvider: dataProvider, i18nProvider: i18nProvider, history: history, customReducers: customReducers, customSagas: customSagas, initialState: initialState },\n        React.createElement(AdminUI, { layout: appLayout || layout, customRoutes: customRoutes, dashboard: dashboard, disableTelemetry: disableTelemetry, menu: menu, catchAll: catchAll, theme: theme, title: title, loading: loading, loginPage: loginPage, logout: authProvider ? logoutButton : undefined, ready: ready }, children)));\n};\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}