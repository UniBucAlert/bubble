{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { isRequired, FieldTitle, composeSyncValidators } from 'ra-core';\nimport { useFieldArray } from 'react-final-form-arrays';\nimport { InputLabel, FormControl, FormHelperText } from '@material-ui/core';\nimport InputHelperText from './InputHelperText';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport Labeled from './Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-final-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see https://github.com/final-form/react-final-form-arrays\n */\n\nvar ArrayInput = function (_a) {\n  var className = _a.className,\n      defaultValue = _a.defaultValue,\n      label = _a.label,\n      loaded = _a.loaded,\n      loading = _a.loading,\n      children = _a.children,\n      helperText = _a.helperText,\n      record = _a.record,\n      resource = _a.resource,\n      source = _a.source,\n      validate = _a.validate,\n      variant = _a.variant,\n      disabled = _a.disabled,\n      _b = _a.margin,\n      margin = _b === void 0 ? 'dense' : _b,\n      rest = __rest(_a, [\"className\", \"defaultValue\", \"label\", \"loaded\", \"loading\", \"children\", \"helperText\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"disabled\", \"margin\"]);\n\n  var sanitizedValidate = Array.isArray(validate) ? composeSyncValidators(validate) : validate;\n  var fieldProps = useFieldArray(source, __assign({\n    initialValue: defaultValue,\n    validate: sanitizedValidate\n  }, rest));\n\n  if (loading) {\n    return React.createElement(Labeled, {\n      label: label,\n      source: source,\n      resource: resource,\n      className: className\n    }, React.createElement(LinearProgress, null));\n  }\n\n  var _c = fieldProps.meta,\n      error = _c.error,\n      submitError = _c.submitError,\n      touched = _c.touched,\n      dirty = _c.dirty;\n  var arrayInputError = getArrayInputError(error || submitError);\n  return React.createElement(FormControl, __assign({\n    fullWidth: true,\n    margin: \"normal\",\n    className: className,\n    error: (touched || dirty) && !!arrayInputError\n  }, sanitizeInputRestProps(rest)), React.createElement(InputLabel, {\n    htmlFor: source,\n    shrink: true,\n    error: (touched || dirty) && !!arrayInputError\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired(validate)\n  })), cloneElement(Children.only(children), __assign(__assign({}, fieldProps), {\n    record: record,\n    resource: resource,\n    source: source,\n    variant: variant,\n    margin: margin,\n    disabled: disabled\n  })), !!((touched || dirty) && arrayInputError) || helperText ? React.createElement(FormHelperText, {\n    error: (touched || dirty) && !!arrayInputError\n  }, React.createElement(InputHelperText, {\n    touched: touched || dirty,\n    error: arrayInputError,\n    helperText: helperText\n  })) : null);\n};\n\nArrayInput.propTypes = {\n  // @ts-ignore\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultValue: PropTypes.any,\n  isRequired: PropTypes.bool,\n  label: PropTypes.string,\n  helperText: PropTypes.string,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  record: PropTypes.object,\n  options: PropTypes.object,\n  validate: PropTypes.oneOfType([PropTypes.func, PropTypes.arrayOf(PropTypes.func)])\n};\nArrayInput.defaultProps = {\n  options: {},\n  fullWidth: true\n};\nexport var getArrayInputError = function (error) {\n  if (Array.isArray(error)) {\n    return undefined;\n  }\n\n  return error;\n};\nexport default ArrayInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/ArrayInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","cloneElement","Children","PropTypes","isRequired","FieldTitle","composeSyncValidators","useFieldArray","InputLabel","FormControl","FormHelperText","InputHelperText","sanitizeInputRestProps","Labeled","LinearProgress","ArrayInput","_a","className","defaultValue","label","loaded","loading","children","helperText","record","resource","source","validate","variant","disabled","_b","margin","rest","sanitizedValidate","Array","isArray","fieldProps","initialValue","createElement","_c","meta","error","submitError","touched","dirty","arrayInputError","getArrayInputError","fullWidth","htmlFor","shrink","only","propTypes","node","string","any","bool","object","options","oneOfType","func","arrayOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { isRequired, FieldTitle, composeSyncValidators, } from 'ra-core';\nimport { useFieldArray } from 'react-final-form-arrays';\nimport { InputLabel, FormControl, FormHelperText } from '@material-ui/core';\nimport InputHelperText from './InputHelperText';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport Labeled from './Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-final-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see https://github.com/final-form/react-final-form-arrays\n */\nvar ArrayInput = function (_a) {\n    var className = _a.className, defaultValue = _a.defaultValue, label = _a.label, loaded = _a.loaded, loading = _a.loading, children = _a.children, helperText = _a.helperText, record = _a.record, resource = _a.resource, source = _a.source, validate = _a.validate, variant = _a.variant, disabled = _a.disabled, _b = _a.margin, margin = _b === void 0 ? 'dense' : _b, rest = __rest(_a, [\"className\", \"defaultValue\", \"label\", \"loaded\", \"loading\", \"children\", \"helperText\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"disabled\", \"margin\"]);\n    var sanitizedValidate = Array.isArray(validate)\n        ? composeSyncValidators(validate)\n        : validate;\n    var fieldProps = useFieldArray(source, __assign({ initialValue: defaultValue, validate: sanitizedValidate }, rest));\n    if (loading) {\n        return (React.createElement(Labeled, { label: label, source: source, resource: resource, className: className },\n            React.createElement(LinearProgress, null)));\n    }\n    var _c = fieldProps.meta, error = _c.error, submitError = _c.submitError, touched = _c.touched, dirty = _c.dirty;\n    var arrayInputError = getArrayInputError(error || submitError);\n    return (React.createElement(FormControl, __assign({ fullWidth: true, margin: \"normal\", className: className, error: (touched || dirty) && !!arrayInputError }, sanitizeInputRestProps(rest)),\n        React.createElement(InputLabel, { htmlFor: source, shrink: true, error: (touched || dirty) && !!arrayInputError },\n            React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired(validate) })),\n        cloneElement(Children.only(children), __assign(__assign({}, fieldProps), { record: record,\n            resource: resource,\n            source: source,\n            variant: variant,\n            margin: margin,\n            disabled: disabled })),\n        !!((touched || dirty) && arrayInputError) || helperText ? (React.createElement(FormHelperText, { error: (touched || dirty) && !!arrayInputError },\n            React.createElement(InputHelperText, { touched: touched || dirty, error: arrayInputError, helperText: helperText }))) : null));\n};\nArrayInput.propTypes = {\n    // @ts-ignore\n    children: PropTypes.node,\n    className: PropTypes.string,\n    defaultValue: PropTypes.any,\n    isRequired: PropTypes.bool,\n    label: PropTypes.string,\n    helperText: PropTypes.string,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    record: PropTypes.object,\n    options: PropTypes.object,\n    validate: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.arrayOf(PropTypes.func),\n    ]),\n};\nArrayInput.defaultProps = {\n    options: {},\n    fullWidth: true,\n};\nexport var getArrayInputError = function (error) {\n    if (Array.isArray(error)) {\n        return undefined;\n    }\n    return error;\n};\nexport default ArrayInput;\n"]},"metadata":{},"sourceType":"module"}