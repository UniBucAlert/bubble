{"ast":null,"code":"import { useCallback } from 'react'; // @ts-ignore\n\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useCheckMinimumRequiredProps } from '../checkMinimumRequiredProps';\nimport { useCreate } from '../../dataProvider';\nimport { useNotify, useRedirect } from '../../sideEffect';\nimport { useSaveModifiers } from '../saveModifiers';\nimport { useTranslate } from '../../i18n';\nimport useVersion from '../useVersion';\nimport { CRUD_CREATE } from '../../actions';\nimport { useResourceContext, useGetResourceLabel } from '../../core';\n/**\n * Prepare data for the Create view\n *\n * @param {Object} props The props passed to the Create component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Create view\n *\n * @example\n *\n * import { useCreateController } from 'react-admin';\n * import CreateView from './CreateView';\n *\n * const MyCreate = props => {\n *     const controllerProps = useCreateController(props);\n *     return <CreateView {...controllerProps} {...props} />;\n * }\n */\n\nexport var useCreateController = function (props) {\n  useCheckMinimumRequiredProps('Create', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      hasEdit = props.hasEdit,\n      hasShow = props.hasShow,\n      _a = props.record,\n      record = _a === void 0 ? {} : _a,\n      successMessage = props.successMessage,\n      onSuccess = props.onSuccess,\n      onFailure = props.onFailure,\n      transform = props.transform;\n  var resource = useResourceContext(props);\n  var location = useLocation();\n  var translate = useTranslate();\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var recordToUse = getRecord(location, record);\n  var version = useVersion();\n\n  if (process.env.NODE_ENV !== 'production' && successMessage) {\n    console.log('<Create successMessage> prop is deprecated, use the onSuccess prop instead.');\n  }\n\n  var _b = useSaveModifiers({\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    transform: transform\n  }),\n      onSuccessRef = _b.onSuccessRef,\n      setOnSuccess = _b.setOnSuccess,\n      onFailureRef = _b.onFailureRef,\n      setOnFailure = _b.setOnFailure,\n      transformRef = _b.transformRef,\n      setTransform = _b.setTransform;\n\n  var _c = useCreate(resource),\n      create = _c[0],\n      saving = _c[1].loading;\n\n  var save = useCallback(function (data, redirectTo, _a) {\n    if (redirectTo === void 0) {\n      redirectTo = 'list';\n    }\n\n    var _b = _a === void 0 ? {} : _a,\n        onSuccessFromSave = _b.onSuccess,\n        onFailureFromSave = _b.onFailure,\n        transformFromSave = _b.transform;\n\n    return Promise.resolve(transformFromSave ? transformFromSave(data) : transformRef.current ? transformRef.current(data) : data).then(function (data) {\n      return create({\n        payload: {\n          data: data\n        }\n      }, {\n        action: CRUD_CREATE,\n        onSuccess: onSuccessFromSave ? onSuccessFromSave : onSuccessRef.current ? onSuccessRef.current : function (_a) {\n          var newRecord = _a.data;\n          notify(successMessage || 'ra.notification.created', 'info', {\n            smart_count: 1\n          });\n          redirect(redirectTo, basePath, newRecord.id, newRecord);\n        },\n        onFailure: onFailureFromSave ? onFailureFromSave : onFailureRef.current ? onFailureRef.current : function (error) {\n          notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning', {\n            _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n          });\n        }\n      });\n    });\n  }, [transformRef, create, onSuccessRef, onFailureRef, notify, successMessage, redirect, basePath]);\n  var getResourceLabel = useGetResourceLabel();\n  var defaultTitle = translate('ra.page.create', {\n    name: getResourceLabel(resource, 1)\n  });\n  return {\n    loading: false,\n    loaded: true,\n    saving: saving,\n    defaultTitle: defaultTitle,\n    onFailureRef: onFailureRef,\n    onSuccessRef: onSuccessRef,\n    transformRef: transformRef,\n    save: save,\n    setOnSuccess: setOnSuccess,\n    setOnFailure: setOnFailure,\n    setTransform: setTransform,\n    resource: resource,\n    basePath: basePath,\n    record: recordToUse,\n    redirect: getDefaultRedirectRoute(hasShow, hasEdit),\n    version: version\n  };\n};\nexport var getRecord = function (_a, record) {\n  var state = _a.state,\n      search = _a.search;\n\n  if (record === void 0) {\n    record = {};\n  }\n\n  if (state && state.record) {\n    return state.record;\n  }\n\n  if (search) {\n    try {\n      var searchParams = parse(search);\n\n      if (searchParams.source) {\n        if (Array.isArray(searchParams.source)) {\n          console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n          return;\n        }\n\n        return JSON.parse(searchParams.source);\n      }\n    } catch (e) {\n      console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n    }\n  }\n\n  return record;\n};\n\nvar getDefaultRedirectRoute = function (hasShow, hasEdit) {\n  if (hasEdit) {\n    return 'edit';\n  }\n\n  if (hasShow) {\n    return 'show';\n  }\n\n  return 'list';\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/details/useCreateController.js"],"names":["useCallback","parse","useLocation","useCheckMinimumRequiredProps","useCreate","useNotify","useRedirect","useSaveModifiers","useTranslate","useVersion","CRUD_CREATE","useResourceContext","useGetResourceLabel","useCreateController","props","basePath","hasEdit","hasShow","_a","record","successMessage","onSuccess","onFailure","transform","resource","location","translate","notify","redirect","recordToUse","getRecord","version","process","env","NODE_ENV","console","log","_b","onSuccessRef","setOnSuccess","onFailureRef","setOnFailure","transformRef","setTransform","_c","create","saving","loading","save","data","redirectTo","onSuccessFromSave","onFailureFromSave","transformFromSave","Promise","resolve","current","then","payload","action","newRecord","smart_count","id","error","message","_","undefined","getResourceLabel","defaultTitle","name","loaded","getDefaultRedirectRoute","state","search","searchParams","source","Array","isArray","JSON","e"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CACA;;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,4BAAT,QAA6C,8BAA7C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAwC,kBAAxC;AACA,SAASC,gBAAT,QAAkC,kBAAlC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,YAAxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,KAAV,EAAiB;AAC9CX,EAAAA,4BAA4B,CAAC,QAAD,EAAW,CAAC,UAAD,EAAa,UAAb,CAAX,EAAqCW,KAArC,CAA5B;AACA,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MAA+BC,OAAO,GAAGF,KAAK,CAACE,OAA/C;AAAA,MAAwDC,OAAO,GAAGH,KAAK,CAACG,OAAxE;AAAA,MAAiFC,EAAE,GAAGJ,KAAK,CAACK,MAA5F;AAAA,MAAoGA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAlI;AAAA,MAAsIE,cAAc,GAAGN,KAAK,CAACM,cAA7J;AAAA,MAA6KC,SAAS,GAAGP,KAAK,CAACO,SAA/L;AAAA,MAA0MC,SAAS,GAAGR,KAAK,CAACQ,SAA5N;AAAA,MAAuOC,SAAS,GAAGT,KAAK,CAACS,SAAzP;AACA,MAAIC,QAAQ,GAAGb,kBAAkB,CAACG,KAAD,CAAjC;AACA,MAAIW,QAAQ,GAAGvB,WAAW,EAA1B;AACA,MAAIwB,SAAS,GAAGlB,YAAY,EAA5B;AACA,MAAImB,MAAM,GAAGtB,SAAS,EAAtB;AACA,MAAIuB,QAAQ,GAAGtB,WAAW,EAA1B;AACA,MAAIuB,WAAW,GAAGC,SAAS,CAACL,QAAD,EAAWN,MAAX,CAA3B;AACA,MAAIY,OAAO,GAAGtB,UAAU,EAAxB;;AACA,MAAIuB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCd,cAA7C,EAA6D;AACzDe,IAAAA,OAAO,CAACC,GAAR,CAAY,6EAAZ;AACH;;AACD,MAAIC,EAAE,GAAG9B,gBAAgB,CAAC;AAAEc,IAAAA,SAAS,EAAEA,SAAb;AAAwBC,IAAAA,SAAS,EAAEA,SAAnC;AAA8CC,IAAAA,SAAS,EAAEA;AAAzD,GAAD,CAAzB;AAAA,MAAiGe,YAAY,GAAGD,EAAE,CAACC,YAAnH;AAAA,MAAiIC,YAAY,GAAGF,EAAE,CAACE,YAAnJ;AAAA,MAAiKC,YAAY,GAAGH,EAAE,CAACG,YAAnL;AAAA,MAAiMC,YAAY,GAAGJ,EAAE,CAACI,YAAnN;AAAA,MAAiOC,YAAY,GAAGL,EAAE,CAACK,YAAnP;AAAA,MAAiQC,YAAY,GAAGN,EAAE,CAACM,YAAnR;;AACA,MAAIC,EAAE,GAAGxC,SAAS,CAACoB,QAAD,CAAlB;AAAA,MAA8BqB,MAAM,GAAGD,EAAE,CAAC,CAAD,CAAzC;AAAA,MAA8CE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAAF,CAAMG,OAA7D;;AACA,MAAIC,IAAI,GAAGhD,WAAW,CAAC,UAAUiD,IAAV,EAAgBC,UAAhB,EAA4BhC,EAA5B,EAAgC;AACnD,QAAIgC,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,MAAAA,UAAU,GAAG,MAAb;AAAsB;;AACnD,QAAIb,EAAE,GAAGnB,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;AAAA,QAAkCiC,iBAAiB,GAAGd,EAAE,CAAChB,SAAzD;AAAA,QAAoE+B,iBAAiB,GAAGf,EAAE,CAACf,SAA3F;AAAA,QAAsG+B,iBAAiB,GAAGhB,EAAE,CAACd,SAA7H;;AACA,WAAO+B,OAAO,CAACC,OAAR,CAAgBF,iBAAiB,GAClCA,iBAAiB,CAACJ,IAAD,CADiB,GAElCP,YAAY,CAACc,OAAb,GACId,YAAY,CAACc,OAAb,CAAqBP,IAArB,CADJ,GAEIA,IAJH,EAISQ,IAJT,CAIc,UAAUR,IAAV,EAAgB;AACjC,aAAOJ,MAAM,CAAC;AAAEa,QAAAA,OAAO,EAAE;AAAET,UAAAA,IAAI,EAAEA;AAAR;AAAX,OAAD,EAA8B;AACvCU,QAAAA,MAAM,EAAEjD,WAD+B;AAEvCW,QAAAA,SAAS,EAAE8B,iBAAiB,GACtBA,iBADsB,GAEtBb,YAAY,CAACkB,OAAb,GACIlB,YAAY,CAACkB,OADjB,GAEI,UAAUtC,EAAV,EAAc;AACZ,cAAI0C,SAAS,GAAG1C,EAAE,CAAC+B,IAAnB;AACAtB,UAAAA,MAAM,CAACP,cAAc,IACjB,yBADE,EACyB,MADzB,EACiC;AACnCyC,YAAAA,WAAW,EAAE;AADsB,WADjC,CAAN;AAIAjC,UAAAA,QAAQ,CAACsB,UAAD,EAAanC,QAAb,EAAuB6C,SAAS,CAACE,EAAjC,EAAqCF,SAArC,CAAR;AACH,SAb8B;AAcvCtC,QAAAA,SAAS,EAAE8B,iBAAiB,GACtBA,iBADsB,GAEtBZ,YAAY,CAACgB,OAAb,GACIhB,YAAY,CAACgB,OADjB,GAEI,UAAUO,KAAV,EAAiB;AACfpC,UAAAA,MAAM,CAAC,OAAOoC,KAAP,KAAiB,QAAjB,GACDA,KADC,GAEDA,KAAK,CAACC,OAAN,IACE,4BAHF,EAGgC,SAHhC,EAG2C;AAC7CC,YAAAA,CAAC,EAAE,OAAOF,KAAP,KAAiB,QAAjB,GACGA,KADH,GAEGA,KAAK,IAAIA,KAAK,CAACC,OAAf,GACID,KAAK,CAACC,OADV,GAEIE;AALmC,WAH3C,CAAN;AAUH;AA7B8B,OAA9B,CAAb;AA+BH,KApCM,CAAP;AAqCH,GAxCqB,EAwCnB,CACCxB,YADD,EAECG,MAFD,EAGCP,YAHD,EAICE,YAJD,EAKCb,MALD,EAMCP,cAND,EAOCQ,QAPD,EAQCb,QARD,CAxCmB,CAAtB;AAkDA,MAAIoD,gBAAgB,GAAGvD,mBAAmB,EAA1C;AACA,MAAIwD,YAAY,GAAG1C,SAAS,CAAC,gBAAD,EAAmB;AAC3C2C,IAAAA,IAAI,EAAEF,gBAAgB,CAAC3C,QAAD,EAAW,CAAX;AADqB,GAAnB,CAA5B;AAGA,SAAO;AACHuB,IAAAA,OAAO,EAAE,KADN;AAEHuB,IAAAA,MAAM,EAAE,IAFL;AAGHxB,IAAAA,MAAM,EAAEA,MAHL;AAIHsB,IAAAA,YAAY,EAAEA,YAJX;AAKH5B,IAAAA,YAAY,EAAEA,YALX;AAMHF,IAAAA,YAAY,EAAEA,YANX;AAOHI,IAAAA,YAAY,EAAEA,YAPX;AAQHM,IAAAA,IAAI,EAAEA,IARH;AASHT,IAAAA,YAAY,EAAEA,YATX;AAUHE,IAAAA,YAAY,EAAEA,YAVX;AAWHE,IAAAA,YAAY,EAAEA,YAXX;AAYHnB,IAAAA,QAAQ,EAAEA,QAZP;AAaHT,IAAAA,QAAQ,EAAEA,QAbP;AAcHI,IAAAA,MAAM,EAAEU,WAdL;AAeHD,IAAAA,QAAQ,EAAE2C,uBAAuB,CAACtD,OAAD,EAAUD,OAAV,CAf9B;AAgBHe,IAAAA,OAAO,EAAEA;AAhBN,GAAP;AAkBH,CAvFM;AAwFP,OAAO,IAAID,SAAS,GAAG,UAAUZ,EAAV,EAAcC,MAAd,EAAsB;AACzC,MAAIqD,KAAK,GAAGtD,EAAE,CAACsD,KAAf;AAAA,MAAsBC,MAAM,GAAGvD,EAAE,CAACuD,MAAlC;;AACA,MAAItD,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAG,EAAT;AAAc;;AACvC,MAAIqD,KAAK,IAAIA,KAAK,CAACrD,MAAnB,EAA2B;AACvB,WAAOqD,KAAK,CAACrD,MAAb;AACH;;AACD,MAAIsD,MAAJ,EAAY;AACR,QAAI;AACA,UAAIC,YAAY,GAAGzE,KAAK,CAACwE,MAAD,CAAxB;;AACA,UAAIC,YAAY,CAACC,MAAjB,EAAyB;AACrB,YAAIC,KAAK,CAACC,OAAN,CAAcH,YAAY,CAACC,MAA3B,CAAJ,EAAwC;AACpCxC,UAAAA,OAAO,CAAC4B,KAAR,CAAc,gDAAgDU,MAAhD,GAAyD,yHAAvE;AACA;AACH;;AACD,eAAOK,IAAI,CAAC7E,KAAL,CAAWyE,YAAY,CAACC,MAAxB,CAAP;AACH;AACJ,KATD,CAUA,OAAOI,CAAP,EAAU;AACN5C,MAAAA,OAAO,CAAC4B,KAAR,CAAc,gDAAgDU,MAAhD,GAAyD,yHAAvE;AACH;AACJ;;AACD,SAAOtD,MAAP;AACH,CAtBM;;AAuBP,IAAIoD,uBAAuB,GAAG,UAAUtD,OAAV,EAAmBD,OAAnB,EAA4B;AACtD,MAAIA,OAAJ,EAAa;AACT,WAAO,MAAP;AACH;;AACD,MAAIC,OAAJ,EAAa;AACT,WAAO,MAAP;AACH;;AACD,SAAO,MAAP;AACH,CARD","sourcesContent":["import { useCallback } from 'react';\n// @ts-ignore\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useCheckMinimumRequiredProps } from '../checkMinimumRequiredProps';\nimport { useCreate } from '../../dataProvider';\nimport { useNotify, useRedirect, } from '../../sideEffect';\nimport { useSaveModifiers, } from '../saveModifiers';\nimport { useTranslate } from '../../i18n';\nimport useVersion from '../useVersion';\nimport { CRUD_CREATE } from '../../actions';\nimport { useResourceContext, useGetResourceLabel } from '../../core';\n/**\n * Prepare data for the Create view\n *\n * @param {Object} props The props passed to the Create component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Create view\n *\n * @example\n *\n * import { useCreateController } from 'react-admin';\n * import CreateView from './CreateView';\n *\n * const MyCreate = props => {\n *     const controllerProps = useCreateController(props);\n *     return <CreateView {...controllerProps} {...props} />;\n * }\n */\nexport var useCreateController = function (props) {\n    useCheckMinimumRequiredProps('Create', ['basePath', 'resource'], props);\n    var basePath = props.basePath, hasEdit = props.hasEdit, hasShow = props.hasShow, _a = props.record, record = _a === void 0 ? {} : _a, successMessage = props.successMessage, onSuccess = props.onSuccess, onFailure = props.onFailure, transform = props.transform;\n    var resource = useResourceContext(props);\n    var location = useLocation();\n    var translate = useTranslate();\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var recordToUse = getRecord(location, record);\n    var version = useVersion();\n    if (process.env.NODE_ENV !== 'production' && successMessage) {\n        console.log('<Create successMessage> prop is deprecated, use the onSuccess prop instead.');\n    }\n    var _b = useSaveModifiers({ onSuccess: onSuccess, onFailure: onFailure, transform: transform }), onSuccessRef = _b.onSuccessRef, setOnSuccess = _b.setOnSuccess, onFailureRef = _b.onFailureRef, setOnFailure = _b.setOnFailure, transformRef = _b.transformRef, setTransform = _b.setTransform;\n    var _c = useCreate(resource), create = _c[0], saving = _c[1].loading;\n    var save = useCallback(function (data, redirectTo, _a) {\n        if (redirectTo === void 0) { redirectTo = 'list'; }\n        var _b = _a === void 0 ? {} : _a, onSuccessFromSave = _b.onSuccess, onFailureFromSave = _b.onFailure, transformFromSave = _b.transform;\n        return Promise.resolve(transformFromSave\n            ? transformFromSave(data)\n            : transformRef.current\n                ? transformRef.current(data)\n                : data).then(function (data) {\n            return create({ payload: { data: data } }, {\n                action: CRUD_CREATE,\n                onSuccess: onSuccessFromSave\n                    ? onSuccessFromSave\n                    : onSuccessRef.current\n                        ? onSuccessRef.current\n                        : function (_a) {\n                            var newRecord = _a.data;\n                            notify(successMessage ||\n                                'ra.notification.created', 'info', {\n                                smart_count: 1,\n                            });\n                            redirect(redirectTo, basePath, newRecord.id, newRecord);\n                        },\n                onFailure: onFailureFromSave\n                    ? onFailureFromSave\n                    : onFailureRef.current\n                        ? onFailureRef.current\n                        : function (error) {\n                            notify(typeof error === 'string'\n                                ? error\n                                : error.message ||\n                                    'ra.notification.http_error', 'warning', {\n                                _: typeof error === 'string'\n                                    ? error\n                                    : error && error.message\n                                        ? error.message\n                                        : undefined,\n                            });\n                        },\n            });\n        });\n    }, [\n        transformRef,\n        create,\n        onSuccessRef,\n        onFailureRef,\n        notify,\n        successMessage,\n        redirect,\n        basePath,\n    ]);\n    var getResourceLabel = useGetResourceLabel();\n    var defaultTitle = translate('ra.page.create', {\n        name: getResourceLabel(resource, 1),\n    });\n    return {\n        loading: false,\n        loaded: true,\n        saving: saving,\n        defaultTitle: defaultTitle,\n        onFailureRef: onFailureRef,\n        onSuccessRef: onSuccessRef,\n        transformRef: transformRef,\n        save: save,\n        setOnSuccess: setOnSuccess,\n        setOnFailure: setOnFailure,\n        setTransform: setTransform,\n        resource: resource,\n        basePath: basePath,\n        record: recordToUse,\n        redirect: getDefaultRedirectRoute(hasShow, hasEdit),\n        version: version,\n    };\n};\nexport var getRecord = function (_a, record) {\n    var state = _a.state, search = _a.search;\n    if (record === void 0) { record = {}; }\n    if (state && state.record) {\n        return state.record;\n    }\n    if (search) {\n        try {\n            var searchParams = parse(search);\n            if (searchParams.source) {\n                if (Array.isArray(searchParams.source)) {\n                    console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n                    return;\n                }\n                return JSON.parse(searchParams.source);\n            }\n        }\n        catch (e) {\n            console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n        }\n    }\n    return record;\n};\nvar getDefaultRedirectRoute = function (hasShow, hasEdit) {\n    if (hasEdit) {\n        return 'edit';\n    }\n    if (hasShow) {\n        return 'show';\n    }\n    return 'list';\n};\n"]},"metadata":{},"sourceType":"module"}