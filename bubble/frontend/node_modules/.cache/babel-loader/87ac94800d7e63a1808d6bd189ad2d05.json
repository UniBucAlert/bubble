{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form'; // shared logic between components that use either render prop,\n// children render function, or component prop\n\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return /*#__PURE__*/React.createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = /*#__PURE__*/React.createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.3\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\n\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all$1 = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  React.useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/React.createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = React.useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = React.useRef(true);\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = React.useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: React.useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.blur, state.name, format, formatOnBlur]),\n    onChange: React.useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type && component !== 'select';\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: React.useCallback(function (event) {\n      state.focus();\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.focus])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      var value = state.value;\n\n      if (type === 'checkbox') {\n        value = format(value, name);\n\n        if (_value === undefined) {\n          return !!value;\n        } else {\n          return !!(Array.isArray(value) && ~value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return format(value, name) === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/React.createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error('prop name cannot be undefined in <Field> component');\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };","map":{"version":3,"sources":["/node_modules/react-final-form/dist/react-final-form.es.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","React__default","formSubscriptionItems","createForm","version","version$1","fieldSubscriptionItems","renderComponent","props","lazyProps","name","render","children","component","rest","createElement","Object","assign","undefined","Error","useWhenValueChanges","value","callback","isEqual","a","b","previous","useRef","useEffect","current","useConstant","init","ref","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","createContext","useLatest","addLazyState","dest","state","forEach","defineProperty","get","enumerable","addLazyFormState","addLazyFieldMetaState","versions","all$1","reduce","result","ReactFinalForm","_ref","debug","decorators","destroyOnUnregister","alternateFormApi","form","initialValues","initialValuesEqual","keepDirtyOnReinitialize","mutators","onSubmit","_ref$subscription","subscription","validate","validateOnBlur","config","f","pauseValidation","_React$useState","useState","initialState","subscribe","setState","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","process","env","NODE_ENV","console","error","setConfig","handleSubmit","event","preventDefault","submit","renderProps","reset","eventOrValues","Provider","__versions","useForm","componentName","useContext","useFormState","_temp","onChange","firstRender","onChangeRef","newState","lazyState","FormSpy","reactFinalForm","isReactNative","window","navigator","product","getSelectedValues","options","index","option","selected","push","getValue","currentValue","valueProp","nativeEvent","text","detypedEvent","_detypedEvent$target","target","type","checked","Array","isArray","indexOf","slice","all","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","handlers","onBlur","useCallback","blur","fieldState","targetType","unknown","_value2","onFocus","focus","meta","input","Field","forwardRef","field","withTypes","Form"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return /*#__PURE__*/React.createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = /*#__PURE__*/React.createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.3\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all$1 = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  React.useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/React.createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = React.useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = React.useRef(true);\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = React.useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: React.useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.blur, state.name, format, formatOnBlur]),\n    onChange: React.useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type && component !== 'select';\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: React.useCallback(function (event) {\n      state.focus();\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.focus])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      var value = state.value;\n\n      if (type === 'checkbox') {\n        value = format(value, name);\n\n        if (_value === undefined) {\n          return !!value;\n        } else {\n          return !!(Array.isArray(value) && ~value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return format(value, name) === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/React.createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error('prop name cannot be undefined in <Field> component');\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n"]},"metadata":{},"sourceType":"module"}