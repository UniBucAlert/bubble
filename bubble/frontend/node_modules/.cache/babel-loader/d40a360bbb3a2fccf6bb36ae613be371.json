{"ast":null,"code":"import { useEffect } from 'react';\nimport { useRefresh } from '../sideEffect';\nimport useIsAutomaticRefreshEnabled from './useIsAutomaticRefreshEnabled';\n/**\n * Trigger a refresh of the page when the page comes back from background after a certain delay\n *\n * @param {number} delay Delay in milliseconds since the time the page was hidden. Defaults to 5 minutes.\n */\n\nvar useRefreshWhenVisible = function (delay) {\n  if (delay === void 0) {\n    delay = 1000 * 60 * 5;\n  }\n\n  var refresh = useRefresh();\n  var automaticRefreshEnabled = useIsAutomaticRefreshEnabled();\n  useEffect(function () {\n    if (typeof document === 'undefined') return;\n    var lastHiddenTime;\n\n    var handleVisibilityChange = function () {\n      if (!automaticRefreshEnabled) {\n        return;\n      }\n\n      if (document.hidden) {\n        // tab goes hidden\n        lastHiddenTime = Date.now();\n      } else {\n        // tab goes visible\n        if (Date.now() - lastHiddenTime > delay) {\n          refresh();\n        }\n\n        lastHiddenTime = null;\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange, {\n      capture: true\n    });\n    return function () {\n      return document.removeEventListener('visibilitychange', handleVisibilityChange, {\n        capture: true\n      });\n    };\n  }, [automaticRefreshEnabled, delay, refresh]);\n};\n\nexport default useRefreshWhenVisible;","map":{"version":3,"sources":["/node_modules/ra-core/esm/dataProvider/useRefreshWhenVisible.js"],"names":["useEffect","useRefresh","useIsAutomaticRefreshEnabled","useRefreshWhenVisible","delay","refresh","automaticRefreshEnabled","document","lastHiddenTime","handleVisibilityChange","hidden","Date","now","addEventListener","capture","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,4BAAP,MAAyC,gCAAzC;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB,GAAG,UAAUC,KAAV,EAAiB;AACzC,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,OAAO,EAAP,GAAY,CAApB;AAAwB;;AAChD,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AACA,MAAIK,uBAAuB,GAAGJ,4BAA4B,EAA1D;AACAF,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,OAAOO,QAAP,KAAoB,WAAxB,EACI;AACJ,QAAIC,cAAJ;;AACA,QAAIC,sBAAsB,GAAG,YAAY;AACrC,UAAI,CAACH,uBAAL,EAA8B;AAC1B;AACH;;AACD,UAAIC,QAAQ,CAACG,MAAb,EAAqB;AACjB;AACAF,QAAAA,cAAc,GAAGG,IAAI,CAACC,GAAL,EAAjB;AACH,OAHD,MAIK;AACD;AACA,YAAID,IAAI,CAACC,GAAL,KAAaJ,cAAb,GAA8BJ,KAAlC,EAAyC;AACrCC,UAAAA,OAAO;AACV;;AACDG,QAAAA,cAAc,GAAG,IAAjB;AACH;AACJ,KAfD;;AAgBAD,IAAAA,QAAQ,CAACM,gBAAT,CAA0B,kBAA1B,EAA8CJ,sBAA9C,EAAsE;AAClEK,MAAAA,OAAO,EAAE;AADyD,KAAtE;AAGA,WAAO,YAAY;AACf,aAAOP,QAAQ,CAACQ,mBAAT,CAA6B,kBAA7B,EAAiDN,sBAAjD,EAAyE;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAAzE,CAAP;AACH,KAFD;AAGH,GA1BQ,EA0BN,CAACR,uBAAD,EAA0BF,KAA1B,EAAiCC,OAAjC,CA1BM,CAAT;AA2BH,CA/BD;;AAgCA,eAAeF,qBAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useRefresh } from '../sideEffect';\nimport useIsAutomaticRefreshEnabled from './useIsAutomaticRefreshEnabled';\n/**\n * Trigger a refresh of the page when the page comes back from background after a certain delay\n *\n * @param {number} delay Delay in milliseconds since the time the page was hidden. Defaults to 5 minutes.\n */\nvar useRefreshWhenVisible = function (delay) {\n    if (delay === void 0) { delay = 1000 * 60 * 5; }\n    var refresh = useRefresh();\n    var automaticRefreshEnabled = useIsAutomaticRefreshEnabled();\n    useEffect(function () {\n        if (typeof document === 'undefined')\n            return;\n        var lastHiddenTime;\n        var handleVisibilityChange = function () {\n            if (!automaticRefreshEnabled) {\n                return;\n            }\n            if (document.hidden) {\n                // tab goes hidden\n                lastHiddenTime = Date.now();\n            }\n            else {\n                // tab goes visible\n                if (Date.now() - lastHiddenTime > delay) {\n                    refresh();\n                }\n                lastHiddenTime = null;\n            }\n        };\n        document.addEventListener('visibilitychange', handleVisibilityChange, {\n            capture: true,\n        });\n        return function () {\n            return document.removeEventListener('visibilitychange', handleVisibilityChange, { capture: true });\n        };\n    }, [automaticRefreshEnabled, delay, refresh]);\n};\nexport default useRefreshWhenVisible;\n"]},"metadata":{},"sourceType":"module"}