{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { useInput, useReferenceInputController, warning as warningLog, ListContextProvider, ResourceContextProvider } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport ReferenceError from './ReferenceError';\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using `dataProvider.getList()`), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <AutocompleteInput optionText=\"title\" />\n * </ReferenceInput>\n */\n\nvar ReferenceInput = function (_a) {\n  var format = _a.format,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      onFocus = _a.onFocus,\n      parse = _a.parse,\n      validate = _a.validate,\n      props = __rest(_a, [\"format\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\"]);\n\n  var inputProps = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    validate: validate\n  }, props));\n  return React.createElement(ReferenceInputView, __assign({}, inputProps, props, useReferenceInputController(__assign(__assign({}, props), inputProps))));\n};\n\nReferenceInput.propTypes = {\n  allowEmpty: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  filter: PropTypes.object,\n  filterToQuery: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  perPage: PropTypes.number,\n  record: PropTypes.object,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  source: PropTypes.string\n};\nReferenceInput.defaultProps = {\n  filter: {},\n  filterToQuery: function (searchText) {\n    return searchText ? {\n      q: searchText\n    } : {};\n  },\n  perPage: 25,\n  sort: {\n    field: 'id',\n    order: 'DESC'\n  }\n};\n\nvar sanitizeRestProps = function (_a) {\n  var _b = _a.dataStatus,\n      dataStatus = _b === void 0 ? null : _b,\n      _c = _a.filter,\n      filter = _c === void 0 ? null : _c,\n      _d = _a.filterToQuery,\n      filterToQuery = _d === void 0 ? null : _d,\n      _e = _a.onChange,\n      onChange = _e === void 0 ? null : _e,\n      _f = _a.perPage,\n      perPage = _f === void 0 ? null : _f,\n      _g = _a.reference,\n      reference = _g === void 0 ? null : _g,\n      _h = _a.referenceRecord,\n      referenceRecord = _h === void 0 ? null : _h,\n      _j = _a.referenceSource,\n      referenceSource = _j === void 0 ? null : _j,\n      _k = _a.sort,\n      sort = _k === void 0 ? null : _k,\n      _l = _a.validation,\n      validation = _l === void 0 ? null : _l,\n      rest = __rest(_a, [\"dataStatus\", \"filter\", \"filterToQuery\", \"onChange\", \"perPage\", \"reference\", \"referenceRecord\", \"referenceSource\", \"sort\", \"validation\"]);\n\n  return sanitizeInputRestProps(rest);\n};\n\nexport var ReferenceInputView = function (_a) {\n  var allowEmpty = _a.allowEmpty,\n      basePath = _a.basePath,\n      children = _a.children,\n      choices = _a.choices,\n      classes = _a.classes,\n      className = _a.className,\n      error = _a.error,\n      helperText = _a.helperText,\n      id = _a.id,\n      input = _a.input,\n      isRequired = _a.isRequired,\n      label = _a.label,\n      meta = _a.meta,\n      possibleValues = _a.possibleValues,\n      resource = _a.resource,\n      reference = _a.reference,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      source = _a.source,\n      warning = _a.warning,\n      rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"classes\", \"className\", \"error\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"meta\", \"possibleValues\", \"resource\", \"reference\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"warning\"]);\n\n  if (Children.count(children) !== 1) {\n    throw new Error('<ReferenceInput> only accepts a single child');\n  } // This is not a final-form error but an unrecoverable error from the\n  // useReferenceInputController hook\n\n\n  if (error) {\n    return React.createElement(ReferenceError, {\n      label: label,\n      error: error\n    });\n  } // When the useReferenceInputController returns a warning, it means it\n  // had an issue trying to load the referenced record\n  // We display it by overriding the final-form meta\n\n\n  var finalMeta = warning ? __assign(__assign({}, meta), {\n    error: warning\n  }) : meta; // helperText should never be set on ReferenceInput, only in child component\n  // But in a Filter component, the child helperText have to be forced to false\n\n  warningLog(helperText !== undefined && helperText !== false, \"<ReferenceInput> doesn't accept a helperText prop. Set the helperText prop on the child component instead\");\n  var disabledHelperText = helperText === false ? {\n    helperText: helperText\n  } : {};\n  return React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ListContextProvider, {\n    value: possibleValues\n  }, cloneElement(children, __assign(__assign({\n    allowEmpty: allowEmpty,\n    classes: classes,\n    className: className,\n    input: input,\n    isRequired: isRequired,\n    label: label,\n    resource: resource,\n    meta: finalMeta,\n    source: source,\n    choices: choices,\n    basePath: basePath,\n    setFilter: setFilter,\n    setPagination: setPagination,\n    setSort: setSort,\n    translateChoice: false\n  }, disabledHelperText), sanitizeRestProps(rest)))));\n};\nexport default ReferenceInput;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/input/ReferenceInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Children","cloneElement","PropTypes","useInput","useReferenceInputController","warning","warningLog","ListContextProvider","ResourceContextProvider","sanitizeInputRestProps","ReferenceError","ReferenceInput","_a","format","onBlur","onChange","onFocus","parse","validate","props","inputProps","createElement","ReferenceInputView","propTypes","allowEmpty","bool","basePath","string","children","element","isRequired","className","classes","object","filter","filterToQuery","func","label","perPage","number","record","reference","resource","sort","shape","field","order","oneOf","source","defaultProps","searchText","q","sanitizeRestProps","_b","dataStatus","_c","_d","_e","_f","_g","_h","referenceRecord","_j","referenceSource","_k","_l","validation","rest","choices","error","helperText","id","input","meta","possibleValues","setFilter","setPagination","setSort","count","Error","finalMeta","undefined","disabledHelperText","value","translateChoice"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;AACJ,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,OAAOgB,KAAP,IAAgBC,QAAhB,EAA0BC,YAA1B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,2BAAnB,EAAgDC,OAAO,IAAIC,UAA3D,EAAuEC,mBAAvE,EAA4FC,uBAA5F,QAA4H,SAA5H;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,UAAUC,EAAV,EAAc;AAC/B,MAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,MAAwBC,MAAM,GAAGF,EAAE,CAACE,MAApC;AAAA,MAA4CC,QAAQ,GAAGH,EAAE,CAACG,QAA1D;AAAA,MAAoEC,OAAO,GAAGJ,EAAE,CAACI,OAAjF;AAAA,MAA0FC,KAAK,GAAGL,EAAE,CAACK,KAArG;AAAA,MAA4GC,QAAQ,GAAGN,EAAE,CAACM,QAA1H;AAAA,MAAoIC,KAAK,GAAGzB,MAAM,CAACkB,EAAD,EAAK,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,EAAiC,SAAjC,EAA4C,OAA5C,EAAqD,UAArD,CAAL,CAAlJ;;AACA,MAAIQ,UAAU,GAAGjB,QAAQ,CAACvB,QAAQ,CAAC;AAAEiC,IAAAA,MAAM,EAAEA,MAAV;AAC/BC,IAAAA,MAAM,EAAEA,MADuB;AAE/BC,IAAAA,QAAQ,EAAEA,QAFqB;AAG/BC,IAAAA,OAAO,EAAEA,OAHsB;AAI/BC,IAAAA,KAAK,EAAEA,KAJwB;AAK/BC,IAAAA,QAAQ,EAAEA;AALqB,GAAD,EAKRC,KALQ,CAAT,CAAzB;AAMA,SAAQpB,KAAK,CAACsB,aAAN,CAAoBC,kBAApB,EAAwC1C,QAAQ,CAAC,EAAD,EAAKwC,UAAL,EAAiBD,KAAjB,EAAwBf,2BAA2B,CAACxB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuC,KAAL,CAAT,EAAsBC,UAAtB,CAAT,CAAnD,CAAhD,CAAR;AACH,CATD;;AAUAT,cAAc,CAACY,SAAf,GAA2B;AACvBC,EAAAA,UAAU,EAAEtB,SAAS,CAACuB,IADC;AAEvBC,EAAAA,QAAQ,EAAExB,SAAS,CAACyB,MAFG;AAGvBC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,OAAV,CAAkBC,UAHL;AAIvBC,EAAAA,SAAS,EAAE7B,SAAS,CAACyB,MAJE;AAKvBK,EAAAA,OAAO,EAAE9B,SAAS,CAAC+B,MALI;AAMvBC,EAAAA,MAAM,EAAEhC,SAAS,CAAC+B,MANK;AAOvBE,EAAAA,aAAa,EAAEjC,SAAS,CAACkC,IAAV,CAAeN,UAPP;AAQvBO,EAAAA,KAAK,EAAEnC,SAAS,CAACyB,MARM;AASvBZ,EAAAA,QAAQ,EAAEb,SAAS,CAACkC,IATG;AAUvBE,EAAAA,OAAO,EAAEpC,SAAS,CAACqC,MAVI;AAWvBC,EAAAA,MAAM,EAAEtC,SAAS,CAAC+B,MAXK;AAYvBQ,EAAAA,SAAS,EAAEvC,SAAS,CAACyB,MAAV,CAAiBG,UAZL;AAavBY,EAAAA,QAAQ,EAAExC,SAAS,CAACyB,MAbG;AAcvBgB,EAAAA,IAAI,EAAEzC,SAAS,CAAC0C,KAAV,CAAgB;AAClBC,IAAAA,KAAK,EAAE3C,SAAS,CAACyB,MADC;AAElBmB,IAAAA,KAAK,EAAE5C,SAAS,CAAC6C,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB;AAFW,GAAhB,CAdiB;AAkBvBC,EAAAA,MAAM,EAAE9C,SAAS,CAACyB;AAlBK,CAA3B;AAoBAhB,cAAc,CAACsC,YAAf,GAA8B;AAC1Bf,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,aAAa,EAAE,UAAUe,UAAV,EAAsB;AAAE,WAAQA,UAAU,GAAG;AAAEC,MAAAA,CAAC,EAAED;AAAL,KAAH,GAAuB,EAAzC;AAA+C,GAF5D;AAG1BZ,EAAAA,OAAO,EAAE,EAHiB;AAI1BK,EAAAA,IAAI,EAAE;AAAEE,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,KAAK,EAAE;AAAtB;AAJoB,CAA9B;;AAMA,IAAIM,iBAAiB,GAAG,UAAUxC,EAAV,EAAc;AAClC,MAAIyC,EAAE,GAAGzC,EAAE,CAAC0C,UAAZ;AAAA,MAAwBA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA5D;AAAA,MAAgEE,EAAE,GAAG3C,EAAE,CAACsB,MAAxE;AAAA,MAAgFA,MAAM,GAAGqB,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAhH;AAAA,MAAoHC,EAAE,GAAG5C,EAAE,CAACuB,aAA5H;AAAA,MAA2IA,aAAa,GAAGqB,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAlL;AAAA,MAAsLC,EAAE,GAAG7C,EAAE,CAACG,QAA9L;AAAA,MAAwMA,QAAQ,GAAG0C,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA1O;AAAA,MAA8OC,EAAE,GAAG9C,EAAE,CAAC0B,OAAtP;AAAA,MAA+PA,OAAO,GAAGoB,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAhS;AAAA,MAAoSC,EAAE,GAAG/C,EAAE,CAAC6B,SAA5S;AAAA,MAAuTA,SAAS,GAAGkB,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA1V;AAAA,MAA8VC,EAAE,GAAGhD,EAAE,CAACiD,eAAtW;AAAA,MAAuXA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAha;AAAA,MAAoaE,EAAE,GAAGlD,EAAE,CAACmD,eAA5a;AAAA,MAA6bA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAte;AAAA,MAA0eE,EAAE,GAAGpD,EAAE,CAAC+B,IAAlf;AAAA,MAAwfA,IAAI,GAAGqB,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAthB;AAAA,MAA0hBC,EAAE,GAAGrD,EAAE,CAACsD,UAAliB;AAAA,MAA8iBA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAllB;AAAA,MAAslBE,IAAI,GAAGzE,MAAM,CAACkB,EAAD,EAAK,CAAC,YAAD,EAAe,QAAf,EAAyB,eAAzB,EAA0C,UAA1C,EAAsD,SAAtD,EAAiE,WAAjE,EAA8E,iBAA9E,EAAiG,iBAAjG,EAAoH,MAApH,EAA4H,YAA5H,CAAL,CAAnmB;;AACA,SAAOH,sBAAsB,CAAC0D,IAAD,CAA7B;AACH,CAHD;;AAIA,OAAO,IAAI7C,kBAAkB,GAAG,UAAUV,EAAV,EAAc;AAC1C,MAAIY,UAAU,GAAGZ,EAAE,CAACY,UAApB;AAAA,MAAgCE,QAAQ,GAAGd,EAAE,CAACc,QAA9C;AAAA,MAAwDE,QAAQ,GAAGhB,EAAE,CAACgB,QAAtE;AAAA,MAAgFwC,OAAO,GAAGxD,EAAE,CAACwD,OAA7F;AAAA,MAAsGpC,OAAO,GAAGpB,EAAE,CAACoB,OAAnH;AAAA,MAA4HD,SAAS,GAAGnB,EAAE,CAACmB,SAA3I;AAAA,MAAsJsC,KAAK,GAAGzD,EAAE,CAACyD,KAAjK;AAAA,MAAwKC,UAAU,GAAG1D,EAAE,CAAC0D,UAAxL;AAAA,MAAoMC,EAAE,GAAG3D,EAAE,CAAC2D,EAA5M;AAAA,MAAgNC,KAAK,GAAG5D,EAAE,CAAC4D,KAA3N;AAAA,MAAkO1C,UAAU,GAAGlB,EAAE,CAACkB,UAAlP;AAAA,MAA8PO,KAAK,GAAGzB,EAAE,CAACyB,KAAzQ;AAAA,MAAgRoC,IAAI,GAAG7D,EAAE,CAAC6D,IAA1R;AAAA,MAAgSC,cAAc,GAAG9D,EAAE,CAAC8D,cAApT;AAAA,MAAoUhC,QAAQ,GAAG9B,EAAE,CAAC8B,QAAlV;AAAA,MAA4VD,SAAS,GAAG7B,EAAE,CAAC6B,SAA3W;AAAA,MAAsXkC,SAAS,GAAG/D,EAAE,CAAC+D,SAArY;AAAA,MAAgZC,aAAa,GAAGhE,EAAE,CAACgE,aAAna;AAAA,MAAkbC,OAAO,GAAGjE,EAAE,CAACiE,OAA/b;AAAA,MAAwc7B,MAAM,GAAGpC,EAAE,CAACoC,MAApd;AAAA,MAA4d3C,OAAO,GAAGO,EAAE,CAACP,OAAze;AAAA,MAAkf8D,IAAI,GAAGzE,MAAM,CAACkB,EAAD,EAAK,CAAC,YAAD,EAAe,UAAf,EAA2B,UAA3B,EAAuC,SAAvC,EAAkD,SAAlD,EAA6D,WAA7D,EAA0E,OAA1E,EAAmF,YAAnF,EAAiG,IAAjG,EAAuG,OAAvG,EAAgH,YAAhH,EAA8H,OAA9H,EAAuI,MAAvI,EAA+I,gBAA/I,EAAiK,UAAjK,EAA6K,WAA7K,EAA0L,WAA1L,EAAuM,eAAvM,EAAwN,SAAxN,EAAmO,QAAnO,EAA6O,SAA7O,CAAL,CAA/f;;AACA,MAAIZ,QAAQ,CAAC8E,KAAT,CAAelD,QAAf,MAA6B,CAAjC,EAAoC;AAChC,UAAM,IAAImD,KAAJ,CAAU,8CAAV,CAAN;AACH,GAJyC,CAK1C;AACA;;;AACA,MAAIV,KAAJ,EAAW;AACP,WAAOtE,KAAK,CAACsB,aAAN,CAAoBX,cAApB,EAAoC;AAAE2B,MAAAA,KAAK,EAAEA,KAAT;AAAgBgC,MAAAA,KAAK,EAAEA;AAAvB,KAApC,CAAP;AACH,GATyC,CAU1C;AACA;AACA;;;AACA,MAAIW,SAAS,GAAG3E,OAAO,GACjBzB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK6F,IAAL,CAAT,EAAqB;AAAEJ,IAAAA,KAAK,EAAEhE;AAAT,GAArB,CADS,GACkCoE,IADzD,CAb0C,CAe1C;AACA;;AACAnE,EAAAA,UAAU,CAACgE,UAAU,KAAKW,SAAf,IAA4BX,UAAU,KAAK,KAA5C,EAAmD,2GAAnD,CAAV;AACA,MAAIY,kBAAkB,GAAGZ,UAAU,KAAK,KAAf,GAAuB;AAAEA,IAAAA,UAAU,EAAEA;AAAd,GAAvB,GAAoD,EAA7E;AACA,SAAQvE,KAAK,CAACsB,aAAN,CAAoBb,uBAApB,EAA6C;AAAE2E,IAAAA,KAAK,EAAE1C;AAAT,GAA7C,EACJ1C,KAAK,CAACsB,aAAN,CAAoBd,mBAApB,EAAyC;AAAE4E,IAAAA,KAAK,EAAET;AAAT,GAAzC,EAAoEzE,YAAY,CAAC2B,QAAD,EAAWhD,QAAQ,CAACA,QAAQ,CAAC;AAAE4C,IAAAA,UAAU,EAAEA,UAAd;AACzGQ,IAAAA,OAAO,EAAEA,OADgG;AAEzGD,IAAAA,SAAS,EAAEA,SAF8F;AAGzGyC,IAAAA,KAAK,EAAEA,KAHkG;AAIzG1C,IAAAA,UAAU,EAAEA,UAJ6F;AAKzGO,IAAAA,KAAK,EAAEA,KALkG;AAMzGK,IAAAA,QAAQ,EAAEA,QAN+F;AAMrF+B,IAAAA,IAAI,EAAEO,SAN+E;AAMpEhC,IAAAA,MAAM,EAAEA,MAN4D;AAOzGoB,IAAAA,OAAO,EAAEA,OAPgG;AAQzG1C,IAAAA,QAAQ,EAAEA,QAR+F;AASzGiD,IAAAA,SAAS,EAAEA,SAT8F;AAUzGC,IAAAA,aAAa,EAAEA,aAV0F;AAWzGC,IAAAA,OAAO,EAAEA,OAXgG;AAWvFO,IAAAA,eAAe,EAAE;AAXsE,GAAD,EAW5DF,kBAX4D,CAAT,EAW9B9B,iBAAiB,CAACe,IAAD,CAXa,CAAnB,CAAhF,CADI,CAAR;AAaH,CAhCM;AAiCP,eAAexD,cAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Children, cloneElement, } from 'react';\nimport PropTypes from 'prop-types';\nimport { useInput, useReferenceInputController, warning as warningLog, ListContextProvider, ResourceContextProvider, } from 'ra-core';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nimport ReferenceError from './ReferenceError';\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using `dataProvider.getList()`), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <AutocompleteInput optionText=\"title\" />\n * </ReferenceInput>\n */\nvar ReferenceInput = function (_a) {\n    var format = _a.format, onBlur = _a.onBlur, onChange = _a.onChange, onFocus = _a.onFocus, parse = _a.parse, validate = _a.validate, props = __rest(_a, [\"format\", \"onBlur\", \"onChange\", \"onFocus\", \"parse\", \"validate\"]);\n    var inputProps = useInput(__assign({ format: format,\n        onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        validate: validate }, props));\n    return (React.createElement(ReferenceInputView, __assign({}, inputProps, props, useReferenceInputController(__assign(__assign({}, props), inputProps)))));\n};\nReferenceInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    filter: PropTypes.object,\n    filterToQuery: PropTypes.func.isRequired,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    perPage: PropTypes.number,\n    record: PropTypes.object,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n};\nReferenceInput.defaultProps = {\n    filter: {},\n    filterToQuery: function (searchText) { return (searchText ? { q: searchText } : {}); },\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\nvar sanitizeRestProps = function (_a) {\n    var _b = _a.dataStatus, dataStatus = _b === void 0 ? null : _b, _c = _a.filter, filter = _c === void 0 ? null : _c, _d = _a.filterToQuery, filterToQuery = _d === void 0 ? null : _d, _e = _a.onChange, onChange = _e === void 0 ? null : _e, _f = _a.perPage, perPage = _f === void 0 ? null : _f, _g = _a.reference, reference = _g === void 0 ? null : _g, _h = _a.referenceRecord, referenceRecord = _h === void 0 ? null : _h, _j = _a.referenceSource, referenceSource = _j === void 0 ? null : _j, _k = _a.sort, sort = _k === void 0 ? null : _k, _l = _a.validation, validation = _l === void 0 ? null : _l, rest = __rest(_a, [\"dataStatus\", \"filter\", \"filterToQuery\", \"onChange\", \"perPage\", \"reference\", \"referenceRecord\", \"referenceSource\", \"sort\", \"validation\"]);\n    return sanitizeInputRestProps(rest);\n};\nexport var ReferenceInputView = function (_a) {\n    var allowEmpty = _a.allowEmpty, basePath = _a.basePath, children = _a.children, choices = _a.choices, classes = _a.classes, className = _a.className, error = _a.error, helperText = _a.helperText, id = _a.id, input = _a.input, isRequired = _a.isRequired, label = _a.label, meta = _a.meta, possibleValues = _a.possibleValues, resource = _a.resource, reference = _a.reference, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, source = _a.source, warning = _a.warning, rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"classes\", \"className\", \"error\", \"helperText\", \"id\", \"input\", \"isRequired\", \"label\", \"meta\", \"possibleValues\", \"resource\", \"reference\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"warning\"]);\n    if (Children.count(children) !== 1) {\n        throw new Error('<ReferenceInput> only accepts a single child');\n    }\n    // This is not a final-form error but an unrecoverable error from the\n    // useReferenceInputController hook\n    if (error) {\n        return React.createElement(ReferenceError, { label: label, error: error });\n    }\n    // When the useReferenceInputController returns a warning, it means it\n    // had an issue trying to load the referenced record\n    // We display it by overriding the final-form meta\n    var finalMeta = warning\n        ? __assign(__assign({}, meta), { error: warning }) : meta;\n    // helperText should never be set on ReferenceInput, only in child component\n    // But in a Filter component, the child helperText have to be forced to false\n    warningLog(helperText !== undefined && helperText !== false, \"<ReferenceInput> doesn't accept a helperText prop. Set the helperText prop on the child component instead\");\n    var disabledHelperText = helperText === false ? { helperText: helperText } : {};\n    return (React.createElement(ResourceContextProvider, { value: reference },\n        React.createElement(ListContextProvider, { value: possibleValues }, cloneElement(children, __assign(__assign({ allowEmpty: allowEmpty,\n            classes: classes,\n            className: className,\n            input: input,\n            isRequired: isRequired,\n            label: label,\n            resource: resource, meta: finalMeta, source: source,\n            choices: choices,\n            basePath: basePath,\n            setFilter: setFilter,\n            setPagination: setPagination,\n            setSort: setSort, translateChoice: false }, disabledHelperText), sanitizeRestProps(rest))))));\n};\nexport default ReferenceInput;\n"]},"metadata":{},"sourceType":"module"}