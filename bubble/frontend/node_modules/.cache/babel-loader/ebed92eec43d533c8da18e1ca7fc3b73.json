{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { useMemo, useState, useEffect, useRef, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { useGetMany } from '../../dataProvider';\nimport { useForm } from 'react-final-form';\nimport useGetMatching from '../../dataProvider/useGetMatching';\nimport { useTranslate } from '../../i18n';\nimport { getStatusForArrayInput as getDataStatus } from './referenceDataStatus';\nimport { useResourceContext } from '../../core';\nimport { usePaginationState, useSortState } from '..';\nimport { indexById, removeEmpty, useSafeSetState } from '../../util';\n/**\n * Prepare data for the ReferenceArrayInput components\n *\n * @example\n *\n * const { choices, error, loaded, loading } = useReferenceArrayInputController({\n *      basePath: 'resource';\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {string} props.basePath basepath to current resource\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @return {Object} controllerProps Fetched data and callbacks for the ReferenceArrayInput components\n */\n\nexport var useReferenceArrayInputController = function (props) {\n  var defaultFilter = props.filter,\n      _a = props.filterToQuery,\n      filterToQuery = _a === void 0 ? defaultFilterToQuery : _a,\n      input = props.input,\n      _b = props.page,\n      initialPage = _b === void 0 ? 1 : _b,\n      _c = props.perPage,\n      initialPerPage = _c === void 0 ? 25 : _c,\n      _d = props.sort,\n      initialSort = _d === void 0 ? {\n    field: 'id',\n    order: 'DESC'\n  } : _d,\n      options = props.options,\n      reference = props.reference,\n      source = props.source;\n  var resource = useResourceContext(props);\n  var translate = useTranslate(); // We store the current input value in a ref so that we are able to fetch\n  // only the missing references when the input value changes\n\n  var inputValue = useRef(input.value);\n\n  var _e = useState(input.value),\n      idsToFetch = _e[0],\n      setIdsToFetch = _e[1];\n\n  var _f = useState([]),\n      idsToGetFromStore = _f[0],\n      setIdsToGetFromStore = _f[1];\n\n  var referenceRecordsFromStore = useSelector(function (state) {\n    return idsToGetFromStore.map(function (id) {\n      return state.admin.resources[reference].data[id];\n    });\n  }); // optimization: we fetch selected items only once. When the user selects more items,\n  // as we already have the past selected items in the store, we don't fetch them.\n\n  useEffect(function () {\n    // Only fetch new ids\n    var newIdsToFetch = difference(input.value, inputValue.current); // Only get from store ids selected and already fetched\n\n    var newIdsToGetFromStore = difference(input.value, newIdsToFetch);\n    /*\n        input.value (current)\n            +------------------------+\n            | ********************** |\n            | ********************** |  inputValue.current (old)\n            | ********** +-----------------------+\n            | ********** | ooooooooo |           |\n            | ********** | ooooooooo |           |\n            | ********** | ooooooooo |           |\n            | ********** | ooooooooo |           |\n            +---|--------|------|----+           |\n                |        |      |                |\n                |        |      |                |\n                |        +------|----------------+\n                |               |\n        newIdsToFetch    newIdsToGetFromStore\n    */\n    // Change states each time input values changes to avoid keeping previous values no more selected\n\n    if (!isEqual(idsToFetch, newIdsToFetch)) {\n      setIdsToFetch(newIdsToFetch);\n    }\n\n    if (!isEqual(idsToGetFromStore, newIdsToGetFromStore)) {\n      setIdsToGetFromStore(newIdsToGetFromStore);\n    }\n\n    inputValue.current = input.value;\n  }, [idsToFetch, idsToGetFromStore, input.value, setIdsToFetch, setIdsToGetFromStore]); // pagination logic\n\n  var _g = usePaginationState({\n    page: initialPage,\n    perPage: initialPerPage\n  }),\n      page = _g.page,\n      setPage = _g.setPage,\n      perPage = _g.perPage,\n      setPerPage = _g.setPerPage,\n      pagination = _g.pagination,\n      setPagination = _g.setPagination;\n\n  var form = useForm();\n  var onSelect = useCallback(function (newIds) {\n    var newValue = new Set(input.value);\n    newIds.forEach(function (newId) {\n      newValue.add(newId);\n    });\n    form.change(input.name, Array.from(newValue));\n  }, [form, input.name, input.value]);\n  var onUnselectItems = useCallback(function () {\n    form.change(input.name, []);\n  }, [form, input.name]);\n  var onToggleItem = useCallback(function (id) {\n    if (input.value.some(function (selectedId) {\n      return selectedId === id;\n    })) {\n      form.change(input.name, input.value.filter(function (selectedId) {\n        return selectedId !== id;\n      }));\n    } else {\n      form.change(input.name, __spreadArrays(input.value, [id]));\n    }\n  }, [form, input.name, input.value]); // sort logic\n\n  var sortRef = useRef(initialSort);\n\n  var _h = useSortState(initialSort),\n      sort = _h.sort,\n      setSort = _h.setSort; // ReferenceArrayInput.setSort had a different signature than the one from ListContext.\n  // In order to not break backward compatibility, we added this temporary setSortForList in the\n  // ReferenceArrayInputContext\n\n\n  var setSortForList = useCallback(function (field, order) {\n    if (order === void 0) {\n      order = 'ASC';\n    }\n\n    setSort({\n      field: field,\n      order: order\n    });\n    setPage(1);\n  }, [setPage, setSort]); // Ensure sort can be updated through props too, not just by using the setSort function\n\n  useEffect(function () {\n    if (!isEqual(initialSort, sortRef.current)) {\n      setSort(initialSort);\n    }\n  }, [setSort, initialSort]); // Ensure pagination can be updated through props too, not just by using the setPagination function\n\n  var paginationRef = useRef({\n    initialPage: initialPage,\n    initialPerPage: initialPerPage\n  });\n  useEffect(function () {\n    if (!isEqual({\n      initialPage: initialPage,\n      initialPerPage: initialPerPage\n    }, paginationRef.current)) {\n      setPagination({\n        page: initialPage,\n        perPage: initialPerPage\n      });\n    }\n  }, [setPagination, initialPage, initialPerPage]); // filter logic\n\n  var _j = useState(''),\n      queryFilter = _j[0],\n      setFilter = _j[1];\n\n  var filterRef = useRef(defaultFilter);\n\n  var _k = useSafeSetState({}),\n      displayedFilters = _k[0],\n      setDisplayedFilters = _k[1];\n\n  var _l = useSafeSetState(defaultFilter),\n      filterValues = _l[0],\n      setFilterValues = _l[1];\n\n  var hideFilter = useCallback(function (filterName) {\n    setDisplayedFilters(function (previousState) {\n      var _a = previousState,\n          _b = filterName,\n          _ = _a[_b],\n          newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n\n      return newState;\n    });\n    setFilterValues(function (previousState) {\n      var _a = previousState,\n          _b = filterName,\n          _ = _a[_b],\n          newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n\n      return newState;\n    });\n  }, [setDisplayedFilters, setFilterValues]);\n  var showFilter = useCallback(function (filterName, defaultValue) {\n    setDisplayedFilters(function (previousState) {\n      var _a;\n\n      return __assign(__assign({}, previousState), (_a = {}, _a[filterName] = true, _a));\n    });\n    setFilterValues(function (previousState) {\n      var _a;\n\n      return __assign(__assign({}, previousState), (_a = {}, _a[filterName] = defaultValue, _a));\n    });\n  }, [setDisplayedFilters, setFilterValues]);\n  var setFilters = useCallback(function (filters, displayedFilters) {\n    setFilterValues(removeEmpty(filters));\n    setDisplayedFilters(displayedFilters);\n    setPage(1);\n  }, [setDisplayedFilters, setFilterValues, setPage]); // handle filter prop change\n\n  useEffect(function () {\n    if (!isEqual(defaultFilter, filterRef.current)) {\n      filterRef.current = defaultFilter;\n      setFilterValues(defaultFilter);\n    }\n  }); // Merge the user filters with the default ones\n\n  var finalFilter = useMemo(function () {\n    return __assign(__assign({}, defaultFilter), filterToQuery(queryFilter));\n  }, [queryFilter, defaultFilter, filterToQuery]);\n\n  var _m = useGetMany(reference, idsToFetch || []),\n      referenceRecordsFetched = _m.data,\n      loaded = _m.loaded;\n\n  var referenceRecords = referenceRecordsFetched ? referenceRecordsFetched.concat(referenceRecordsFromStore) : referenceRecordsFromStore; // filter out not found references - happens when the dataProvider doesn't guarantee referential integrity\n\n  var finalReferenceRecords = referenceRecords.filter(Boolean);\n\n  var _o = useGetMatching(reference, pagination, sort, finalFilter, source, resource, options),\n      matchingReferences = _o.data,\n      matchingReferencesIds = _o.ids,\n      total = _o.total; // We merge the currently selected records with the matching ones, otherwise\n  // the component displaying the currently selected records may fail\n\n\n  var finalMatchingReferences = matchingReferences && matchingReferences.length > 0 ? mergeReferences(matchingReferences, finalReferenceRecords) : finalReferenceRecords.length > 0 ? finalReferenceRecords : matchingReferences;\n  var dataStatus = getDataStatus({\n    input: input,\n    matchingReferences: finalMatchingReferences,\n    referenceRecords: finalReferenceRecords,\n    translate: translate\n  });\n  return {\n    basePath: props.basePath || \"/\" + resource,\n    choices: dataStatus.choices,\n    currentSort: sort,\n    // For the ListContext, we don't want to always display the selected items first.\n    // Indeed it wouldn't work well regarding sorting and pagination\n    data: matchingReferences && matchingReferences.length > 0 ? indexById(matchingReferences) : {},\n    displayedFilters: displayedFilters,\n    error: dataStatus.error,\n    filterValues: filterValues,\n    hasCreate: false,\n    hideFilter: hideFilter,\n    // For the ListContext, we don't want to always display the selected items first.\n    // Indeed it wouldn't work well regarding sorting and pagination\n    ids: matchingReferencesIds || [],\n    loaded: loaded,\n    loading: dataStatus.waiting,\n    onSelect: onSelect,\n    onToggleItem: onToggleItem,\n    onUnselectItems: onUnselectItems,\n    page: page,\n    perPage: perPage,\n    resource: resource,\n    selectedIds: input.value,\n    setFilter: setFilter,\n    setFilters: setFilters,\n    setPage: setPage,\n    setPagination: setPagination,\n    setPerPage: setPerPage,\n    setSort: setSort,\n    setSortForList: setSortForList,\n    showFilter: showFilter,\n    warning: dataStatus.warning,\n    total: total\n  };\n}; // concatenate and deduplicate two lists of records\n\nvar mergeReferences = function (ref1, ref2) {\n  var res = __spreadArrays(ref1);\n\n  var ids = ref1.map(function (ref) {\n    return ref.id;\n  });\n  ref2.forEach(function (ref) {\n    if (!ids.includes(ref.id)) {\n      ids.push(ref.id);\n      res.push(ref);\n    }\n  });\n  return res;\n};\n\nvar defaultFilterToQuery = function (searchText) {\n  return {\n    q: searchText\n  };\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/input/useReferenceArrayInputController.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__spreadArrays","il","r","Array","k","a","j","jl","useMemo","useState","useEffect","useRef","useCallback","useSelector","isEqual","difference","useGetMany","useForm","useGetMatching","useTranslate","getStatusForArrayInput","getDataStatus","useResourceContext","usePaginationState","useSortState","indexById","removeEmpty","useSafeSetState","useReferenceArrayInputController","props","defaultFilter","filter","_a","filterToQuery","defaultFilterToQuery","input","_b","page","initialPage","_c","perPage","initialPerPage","_d","sort","initialSort","field","order","options","reference","source","resource","translate","inputValue","value","_e","idsToFetch","setIdsToFetch","_f","idsToGetFromStore","setIdsToGetFromStore","referenceRecordsFromStore","state","map","id","admin","resources","data","newIdsToFetch","current","newIdsToGetFromStore","_g","setPage","setPerPage","pagination","setPagination","form","onSelect","newIds","newValue","Set","forEach","newId","add","change","name","from","onUnselectItems","onToggleItem","some","selectedId","sortRef","_h","setSort","setSortForList","paginationRef","_j","queryFilter","setFilter","filterRef","_k","displayedFilters","setDisplayedFilters","_l","filterValues","setFilterValues","hideFilter","filterName","previousState","_","newState","showFilter","defaultValue","setFilters","filters","finalFilter","_m","referenceRecordsFetched","loaded","referenceRecords","concat","finalReferenceRecords","Boolean","_o","matchingReferences","matchingReferencesIds","ids","total","finalMatchingReferences","mergeReferences","dataStatus","basePath","choices","currentSort","error","hasCreate","loading","waiting","selectedIds","warning","ref1","ref2","res","ref","includes","push","searchText","q"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { useMemo, useState, useEffect, useRef, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { useGetMany } from '../../dataProvider';\nimport { useForm } from 'react-final-form';\nimport useGetMatching from '../../dataProvider/useGetMatching';\nimport { useTranslate } from '../../i18n';\nimport { getStatusForArrayInput as getDataStatus } from './referenceDataStatus';\nimport { useResourceContext } from '../../core';\nimport { usePaginationState, useSortState } from '..';\nimport { indexById, removeEmpty, useSafeSetState } from '../../util';\n/**\n * Prepare data for the ReferenceArrayInput components\n *\n * @example\n *\n * const { choices, error, loaded, loading } = useReferenceArrayInputController({\n *      basePath: 'resource';\n *      record: { referenceIds: ['id1', 'id2']};\n *      reference: 'reference';\n *      resource: 'resource';\n *      source: 'referenceIds';\n * });\n *\n * @param {Object} props\n * @param {string} props.basePath basepath to current resource\n * @param {Object} props.record The current resource record\n * @param {string} props.reference The linked resource name\n * @param {string} props.resource The current resource name\n * @param {string} props.source The key of the linked resource identifier\n *\n * @param {Props} props\n *\n * @return {Object} controllerProps Fetched data and callbacks for the ReferenceArrayInput components\n */\nexport var useReferenceArrayInputController = function (props) {\n    var defaultFilter = props.filter, _a = props.filterToQuery, filterToQuery = _a === void 0 ? defaultFilterToQuery : _a, input = props.input, _b = props.page, initialPage = _b === void 0 ? 1 : _b, _c = props.perPage, initialPerPage = _c === void 0 ? 25 : _c, _d = props.sort, initialSort = _d === void 0 ? { field: 'id', order: 'DESC' } : _d, options = props.options, reference = props.reference, source = props.source;\n    var resource = useResourceContext(props);\n    var translate = useTranslate();\n    // We store the current input value in a ref so that we are able to fetch\n    // only the missing references when the input value changes\n    var inputValue = useRef(input.value);\n    var _e = useState(input.value), idsToFetch = _e[0], setIdsToFetch = _e[1];\n    var _f = useState([]), idsToGetFromStore = _f[0], setIdsToGetFromStore = _f[1];\n    var referenceRecordsFromStore = useSelector(function (state) {\n        return idsToGetFromStore.map(function (id) { return state.admin.resources[reference].data[id]; });\n    });\n    // optimization: we fetch selected items only once. When the user selects more items,\n    // as we already have the past selected items in the store, we don't fetch them.\n    useEffect(function () {\n        // Only fetch new ids\n        var newIdsToFetch = difference(input.value, inputValue.current);\n        // Only get from store ids selected and already fetched\n        var newIdsToGetFromStore = difference(input.value, newIdsToFetch);\n        /*\n            input.value (current)\n                +------------------------+\n                | ********************** |\n                | ********************** |  inputValue.current (old)\n                | ********** +-----------------------+\n                | ********** | ooooooooo |           |\n                | ********** | ooooooooo |           |\n                | ********** | ooooooooo |           |\n                | ********** | ooooooooo |           |\n                +---|--------|------|----+           |\n                    |        |      |                |\n                    |        |      |                |\n                    |        +------|----------------+\n                    |               |\n            newIdsToFetch    newIdsToGetFromStore\n        */\n        // Change states each time input values changes to avoid keeping previous values no more selected\n        if (!isEqual(idsToFetch, newIdsToFetch)) {\n            setIdsToFetch(newIdsToFetch);\n        }\n        if (!isEqual(idsToGetFromStore, newIdsToGetFromStore)) {\n            setIdsToGetFromStore(newIdsToGetFromStore);\n        }\n        inputValue.current = input.value;\n    }, [\n        idsToFetch,\n        idsToGetFromStore,\n        input.value,\n        setIdsToFetch,\n        setIdsToGetFromStore,\n    ]);\n    // pagination logic\n    var _g = usePaginationState({\n        page: initialPage,\n        perPage: initialPerPage,\n    }), page = _g.page, setPage = _g.setPage, perPage = _g.perPage, setPerPage = _g.setPerPage, pagination = _g.pagination, setPagination = _g.setPagination;\n    var form = useForm();\n    var onSelect = useCallback(function (newIds) {\n        var newValue = new Set(input.value);\n        newIds.forEach(function (newId) {\n            newValue.add(newId);\n        });\n        form.change(input.name, Array.from(newValue));\n    }, [form, input.name, input.value]);\n    var onUnselectItems = useCallback(function () {\n        form.change(input.name, []);\n    }, [form, input.name]);\n    var onToggleItem = useCallback(function (id) {\n        if (input.value.some(function (selectedId) { return selectedId === id; })) {\n            form.change(input.name, input.value.filter(function (selectedId) { return selectedId !== id; }));\n        }\n        else {\n            form.change(input.name, __spreadArrays(input.value, [id]));\n        }\n    }, [form, input.name, input.value]);\n    // sort logic\n    var sortRef = useRef(initialSort);\n    var _h = useSortState(initialSort), sort = _h.sort, setSort = _h.setSort;\n    // ReferenceArrayInput.setSort had a different signature than the one from ListContext.\n    // In order to not break backward compatibility, we added this temporary setSortForList in the\n    // ReferenceArrayInputContext\n    var setSortForList = useCallback(function (field, order) {\n        if (order === void 0) { order = 'ASC'; }\n        setSort({ field: field, order: order });\n        setPage(1);\n    }, [setPage, setSort]);\n    // Ensure sort can be updated through props too, not just by using the setSort function\n    useEffect(function () {\n        if (!isEqual(initialSort, sortRef.current)) {\n            setSort(initialSort);\n        }\n    }, [setSort, initialSort]);\n    // Ensure pagination can be updated through props too, not just by using the setPagination function\n    var paginationRef = useRef({ initialPage: initialPage, initialPerPage: initialPerPage });\n    useEffect(function () {\n        if (!isEqual({ initialPage: initialPage, initialPerPage: initialPerPage }, paginationRef.current)) {\n            setPagination({ page: initialPage, perPage: initialPerPage });\n        }\n    }, [setPagination, initialPage, initialPerPage]);\n    // filter logic\n    var _j = useState(''), queryFilter = _j[0], setFilter = _j[1];\n    var filterRef = useRef(defaultFilter);\n    var _k = useSafeSetState({}), displayedFilters = _k[0], setDisplayedFilters = _k[1];\n    var _l = useSafeSetState(defaultFilter), filterValues = _l[0], setFilterValues = _l[1];\n    var hideFilter = useCallback(function (filterName) {\n        setDisplayedFilters(function (previousState) {\n            var _a = previousState, _b = filterName, _ = _a[_b], newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n            return newState;\n        });\n        setFilterValues(function (previousState) {\n            var _a = previousState, _b = filterName, _ = _a[_b], newState = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n            return newState;\n        });\n    }, [setDisplayedFilters, setFilterValues]);\n    var showFilter = useCallback(function (filterName, defaultValue) {\n        setDisplayedFilters(function (previousState) {\n            var _a;\n            return (__assign(__assign({}, previousState), (_a = {}, _a[filterName] = true, _a)));\n        });\n        setFilterValues(function (previousState) {\n            var _a;\n            return (__assign(__assign({}, previousState), (_a = {}, _a[filterName] = defaultValue, _a)));\n        });\n    }, [setDisplayedFilters, setFilterValues]);\n    var setFilters = useCallback(function (filters, displayedFilters) {\n        setFilterValues(removeEmpty(filters));\n        setDisplayedFilters(displayedFilters);\n        setPage(1);\n    }, [setDisplayedFilters, setFilterValues, setPage]);\n    // handle filter prop change\n    useEffect(function () {\n        if (!isEqual(defaultFilter, filterRef.current)) {\n            filterRef.current = defaultFilter;\n            setFilterValues(defaultFilter);\n        }\n    });\n    // Merge the user filters with the default ones\n    var finalFilter = useMemo(function () { return (__assign(__assign({}, defaultFilter), filterToQuery(queryFilter))); }, [queryFilter, defaultFilter, filterToQuery]);\n    var _m = useGetMany(reference, idsToFetch || []), referenceRecordsFetched = _m.data, loaded = _m.loaded;\n    var referenceRecords = referenceRecordsFetched\n        ? referenceRecordsFetched.concat(referenceRecordsFromStore)\n        : referenceRecordsFromStore;\n    // filter out not found references - happens when the dataProvider doesn't guarantee referential integrity\n    var finalReferenceRecords = referenceRecords.filter(Boolean);\n    var _o = useGetMatching(reference, pagination, sort, finalFilter, source, resource, options), matchingReferences = _o.data, matchingReferencesIds = _o.ids, total = _o.total;\n    // We merge the currently selected records with the matching ones, otherwise\n    // the component displaying the currently selected records may fail\n    var finalMatchingReferences = matchingReferences && matchingReferences.length > 0\n        ? mergeReferences(matchingReferences, finalReferenceRecords)\n        : finalReferenceRecords.length > 0\n            ? finalReferenceRecords\n            : matchingReferences;\n    var dataStatus = getDataStatus({\n        input: input,\n        matchingReferences: finalMatchingReferences,\n        referenceRecords: finalReferenceRecords,\n        translate: translate,\n    });\n    return {\n        basePath: props.basePath || \"/\" + resource,\n        choices: dataStatus.choices,\n        currentSort: sort,\n        // For the ListContext, we don't want to always display the selected items first.\n        // Indeed it wouldn't work well regarding sorting and pagination\n        data: matchingReferences && matchingReferences.length > 0\n            ? indexById(matchingReferences)\n            : {},\n        displayedFilters: displayedFilters,\n        error: dataStatus.error,\n        filterValues: filterValues,\n        hasCreate: false,\n        hideFilter: hideFilter,\n        // For the ListContext, we don't want to always display the selected items first.\n        // Indeed it wouldn't work well regarding sorting and pagination\n        ids: matchingReferencesIds || [],\n        loaded: loaded,\n        loading: dataStatus.waiting,\n        onSelect: onSelect,\n        onToggleItem: onToggleItem,\n        onUnselectItems: onUnselectItems,\n        page: page,\n        perPage: perPage,\n        resource: resource,\n        selectedIds: input.value,\n        setFilter: setFilter,\n        setFilters: setFilters,\n        setPage: setPage,\n        setPagination: setPagination,\n        setPerPage: setPerPage,\n        setSort: setSort,\n        setSortForList: setSortForList,\n        showFilter: showFilter,\n        warning: dataStatus.warning,\n        total: total,\n    };\n};\n// concatenate and deduplicate two lists of records\nvar mergeReferences = function (ref1, ref2) {\n    var res = __spreadArrays(ref1);\n    var ids = ref1.map(function (ref) { return ref.id; });\n    ref2.forEach(function (ref) {\n        if (!ids.includes(ref.id)) {\n            ids.push(ref.id);\n            res.push(ref);\n        }\n    });\n    return res;\n};\nvar defaultFilterToQuery = function (searchText) { return ({ q: searchText }); };\n"]},"metadata":{},"sourceType":"module"}