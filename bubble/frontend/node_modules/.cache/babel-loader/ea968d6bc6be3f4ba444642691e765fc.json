{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport merge from 'lodash/merge';\nimport { ReferenceArrayInputContext } from './ReferenceArrayInputContext';\n/**\n * Hook to get the ReferenceArrayInputContext.\n */\n\nexport var useReferenceArrayInputContext = function (props) {\n  var context = useContext(ReferenceArrayInputContext); // Props take precedence over the context\n\n  return useMemo(function () {\n    return merge({}, context, props != null ? extractReferenceArrayInputContextProps(props) : {});\n  }, [context, props]);\n};\n\nvar extractReferenceArrayInputContextProps = function (_a) {\n  var choices = _a.choices,\n      error = _a.error,\n      loaded = _a.loaded,\n      loading = _a.loading,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      setSortForList = _a.setSortForList,\n      warning = _a.warning;\n  return {\n    choices: choices,\n    error: error,\n    loaded: loaded,\n    loading: loading,\n    setFilter: setFilter,\n    setPagination: setPagination,\n    setSort: setSort,\n    setSortForList: setSortForList,\n    warning: warning\n  };\n};","map":{"version":3,"sources":["/node_modules/ra-core/esm/controller/input/useReferenceArrayInputContext.js"],"names":["useContext","useMemo","merge","ReferenceArrayInputContext","useReferenceArrayInputContext","props","context","extractReferenceArrayInputContextProps","_a","choices","error","loaded","loading","setFilter","setPagination","setSort","setSortForList","warning"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,0BAAT,QAA4C,8BAA5C;AACA;AACA;AACA;;AACA,OAAO,IAAIC,6BAA6B,GAAG,UAAUC,KAAV,EAAiB;AACxD,MAAIC,OAAO,GAAGN,UAAU,CAACG,0BAAD,CAAxB,CADwD,CAExD;;AACA,SAAOF,OAAO,CAAC,YAAY;AACvB,WAAOC,KAAK,CAAC,EAAD,EAAKI,OAAL,EAAcD,KAAK,IAAI,IAAT,GACpBE,sCAAsC,CAACF,KAAD,CADlB,GAEpB,EAFM,CAAZ;AAGH,GAJa,EAIX,CAACC,OAAD,EAAUD,KAAV,CAJW,CAAd;AAKH,CARM;;AASP,IAAIE,sCAAsC,GAAG,UAAUC,EAAV,EAAc;AACvD,MAAIC,OAAO,GAAGD,EAAE,CAACC,OAAjB;AAAA,MAA0BC,KAAK,GAAGF,EAAE,CAACE,KAArC;AAAA,MAA4CC,MAAM,GAAGH,EAAE,CAACG,MAAxD;AAAA,MAAgEC,OAAO,GAAGJ,EAAE,CAACI,OAA7E;AAAA,MAAsFC,SAAS,GAAGL,EAAE,CAACK,SAArG;AAAA,MAAgHC,aAAa,GAAGN,EAAE,CAACM,aAAnI;AAAA,MAAkJC,OAAO,GAAGP,EAAE,CAACO,OAA/J;AAAA,MAAwKC,cAAc,GAAGR,EAAE,CAACQ,cAA5L;AAAA,MAA4MC,OAAO,GAAGT,EAAE,CAACS,OAAzN;AACA,SAAQ;AACJR,IAAAA,OAAO,EAAEA,OADL;AAEJC,IAAAA,KAAK,EAAEA,KAFH;AAGJC,IAAAA,MAAM,EAAEA,MAHJ;AAIJC,IAAAA,OAAO,EAAEA,OAJL;AAKJC,IAAAA,SAAS,EAAEA,SALP;AAMJC,IAAAA,aAAa,EAAEA,aANX;AAOJC,IAAAA,OAAO,EAAEA,OAPL;AAQJC,IAAAA,cAAc,EAAEA,cARZ;AASJC,IAAAA,OAAO,EAAEA;AATL,GAAR;AAWH,CAbD","sourcesContent":["import { useContext, useMemo } from 'react';\nimport merge from 'lodash/merge';\nimport { ReferenceArrayInputContext, } from './ReferenceArrayInputContext';\n/**\n * Hook to get the ReferenceArrayInputContext.\n */\nexport var useReferenceArrayInputContext = function (props) {\n    var context = useContext(ReferenceArrayInputContext);\n    // Props take precedence over the context\n    return useMemo(function () {\n        return merge({}, context, props != null\n            ? extractReferenceArrayInputContextProps(props)\n            : {});\n    }, [context, props]);\n};\nvar extractReferenceArrayInputContextProps = function (_a) {\n    var choices = _a.choices, error = _a.error, loaded = _a.loaded, loading = _a.loading, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, setSortForList = _a.setSortForList, warning = _a.warning;\n    return ({\n        choices: choices,\n        error: error,\n        loaded: loaded,\n        loading: loading,\n        setFilter: setFilter,\n        setPagination: setPagination,\n        setSort: setSort,\n        setSortForList: setSortForList,\n        warning: warning,\n    });\n};\n"]},"metadata":{},"sourceType":"module"}