{"ast":null,"code":"import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { crudDeleteMany, startUndoable, useResourceContext } from 'ra-core';\n/**\n *@deprecated use BulkDeleteButton instead\n */\n\nvar BulkDeleteAction = function (props) {\n  var dispatch = useDispatch();\n  var resource = useResourceContext(props);\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn('<BulkDeleteAction> is deprecated. Use the <BulkDeleteButton> component instead, via the bulkActionButton props.');\n    }\n\n    var basePath = props.basePath,\n        selectedIds = props.selectedIds,\n        undoable = props.undoable,\n        onExit = props.onExit;\n\n    if (undoable) {\n      dispatch(startUndoable(crudDeleteMany(resource, selectedIds, basePath)));\n    } else {\n      dispatch(crudDeleteMany(resource, selectedIds, basePath));\n    }\n\n    onExit();\n  }, [dispatch, props, resource]);\n  return null;\n};\n\nBulkDeleteAction.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  onExit: PropTypes.func.isRequired,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n  translate: PropTypes.func.isRequired,\n  undoable: PropTypes.bool\n};\nBulkDeleteAction.defaultProps = {\n  label: 'ra.action.delete',\n  undoable: true\n};\nexport default BulkDeleteAction;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/list/BulkDeleteAction.js"],"names":["useEffect","PropTypes","useDispatch","crudDeleteMany","startUndoable","useResourceContext","BulkDeleteAction","props","dispatch","resource","process","env","NODE_ENV","console","warn","basePath","selectedIds","undoable","onExit","propTypes","string","label","func","isRequired","arrayOf","any","translate","bool","defaultProps"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,kBAAxC,QAAkE,SAAlE;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiB;AACpC,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AACA,MAAIO,QAAQ,GAAGJ,kBAAkB,CAACE,KAAD,CAAjC;AACAP,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,iHAAb;AACH;;AACD,QAAIC,QAAQ,GAAGR,KAAK,CAACQ,QAArB;AAAA,QAA+BC,WAAW,GAAGT,KAAK,CAACS,WAAnD;AAAA,QAAgEC,QAAQ,GAAGV,KAAK,CAACU,QAAjF;AAAA,QAA2FC,MAAM,GAAGX,KAAK,CAACW,MAA1G;;AACA,QAAID,QAAJ,EAAc;AACVT,MAAAA,QAAQ,CAACJ,aAAa,CAACD,cAAc,CAACM,QAAD,EAAWO,WAAX,EAAwBD,QAAxB,CAAf,CAAd,CAAR;AACH,KAFD,MAGK;AACDP,MAAAA,QAAQ,CAACL,cAAc,CAACM,QAAD,EAAWO,WAAX,EAAwBD,QAAxB,CAAf,CAAR;AACH;;AACDG,IAAAA,MAAM;AACT,GAbQ,EAaN,CAACV,QAAD,EAAWD,KAAX,EAAkBE,QAAlB,CAbM,CAAT;AAcA,SAAO,IAAP;AACH,CAlBD;;AAmBAH,gBAAgB,CAACa,SAAjB,GAA6B;AACzBJ,EAAAA,QAAQ,EAAEd,SAAS,CAACmB,MADK;AAEzBC,EAAAA,KAAK,EAAEpB,SAAS,CAACmB,MAFQ;AAGzBF,EAAAA,MAAM,EAAEjB,SAAS,CAACqB,IAAV,CAAeC,UAHE;AAIzBd,EAAAA,QAAQ,EAAER,SAAS,CAACmB,MAJK;AAKzBJ,EAAAA,WAAW,EAAEf,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,GAA5B,EAAiCF,UALrB;AAMzBG,EAAAA,SAAS,EAAEzB,SAAS,CAACqB,IAAV,CAAeC,UAND;AAOzBN,EAAAA,QAAQ,EAAEhB,SAAS,CAAC0B;AAPK,CAA7B;AASArB,gBAAgB,CAACsB,YAAjB,GAAgC;AAC5BP,EAAAA,KAAK,EAAE,kBADqB;AAE5BJ,EAAAA,QAAQ,EAAE;AAFkB,CAAhC;AAIA,eAAeX,gBAAf","sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { crudDeleteMany, startUndoable, useResourceContext } from 'ra-core';\n/**\n *@deprecated use BulkDeleteButton instead\n */\nvar BulkDeleteAction = function (props) {\n    var dispatch = useDispatch();\n    var resource = useResourceContext(props);\n    useEffect(function () {\n        if (process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.warn('<BulkDeleteAction> is deprecated. Use the <BulkDeleteButton> component instead, via the bulkActionButton props.');\n        }\n        var basePath = props.basePath, selectedIds = props.selectedIds, undoable = props.undoable, onExit = props.onExit;\n        if (undoable) {\n            dispatch(startUndoable(crudDeleteMany(resource, selectedIds, basePath)));\n        }\n        else {\n            dispatch(crudDeleteMany(resource, selectedIds, basePath));\n        }\n        onExit();\n    }, [dispatch, props, resource]);\n    return null;\n};\nBulkDeleteAction.propTypes = {\n    basePath: PropTypes.string,\n    label: PropTypes.string,\n    onExit: PropTypes.func.isRequired,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    translate: PropTypes.func.isRequired,\n    undoable: PropTypes.bool,\n};\nBulkDeleteAction.defaultProps = {\n    label: 'ra.action.delete',\n    undoable: true,\n};\nexport default BulkDeleteAction;\n"]},"metadata":{},"sourceType":"module"}