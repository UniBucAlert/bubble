{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\n\nvar toLocaleStringSupportsLocales = function () {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n  try {\n    new Date().toLocaleString('i');\n  } catch (error) {\n    return error instanceof RangeError;\n  }\n\n  return false;\n}();\n/**\n * Display a date value as a locale string.\n *\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n * @example\n * <DateField source=\"published_at\" />\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\n * <span>07/11/2012</span>\n *\n * <DateField source=\"published_at\" className=\"red\" />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span class=\"red\">07/11/2012</span>\n *\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>Wednesday, November 7, 2012</span>\n *\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>mercredi 7 novembre 2012</span>\n */\n\n\nexport var DateField = memo(function (props) {\n  var className = props.className,\n      emptyText = props.emptyText,\n      locales = props.locales,\n      options = props.options,\n      _a = props.showTime,\n      showTime = _a === void 0 ? false : _a,\n      source = props.source,\n      rest = __rest(props, [\"className\", \"emptyText\", \"locales\", \"options\", \"showTime\", \"source\"]);\n\n  var record = useRecordContext(props);\n\n  if (!record) {\n    return null;\n  }\n\n  var value = get(record, source);\n\n  if (value == null) {\n    return emptyText ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText) : null;\n  }\n\n  var date = value instanceof Date ? value : new Date(value);\n  var dateString = showTime ? toLocaleStringSupportsLocales ? date.toLocaleString(locales, options) : date.toLocaleString() : toLocaleStringSupportsLocales ? date.toLocaleDateString(locales, options) : date.toLocaleDateString();\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\",\n    className: className\n  }, sanitizeFieldRestProps(rest)), dateString);\n});\nDateField.defaultProps = {\n  addLabel: true\n};\nDateField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  options: PropTypes.object,\n  showTime: PropTypes.bool\n});\nexport default DateField;","map":{"version":3,"sources":["/node_modules/ra-ui-materialui/esm/field/DateField.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","memo","PropTypes","get","Typography","useRecordContext","sanitizeFieldRestProps","fieldPropTypes","toLocaleStringSupportsLocales","Date","toLocaleString","error","RangeError","DateField","props","className","emptyText","locales","options","_a","showTime","source","rest","record","value","createElement","component","variant","date","dateString","toLocaleDateString","defaultProps","addLabel","propTypes","oneOfType","string","arrayOf","object","bool"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nvar toLocaleStringSupportsLocales = (function () {\n    // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n    try {\n        new Date().toLocaleString('i');\n    }\n    catch (error) {\n        return error instanceof RangeError;\n    }\n    return false;\n})();\n/**\n * Display a date value as a locale string.\n *\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n * @example\n * <DateField source=\"published_at\" />\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\n * <span>07/11/2012</span>\n *\n * <DateField source=\"published_at\" className=\"red\" />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span class=\"red\">07/11/2012</span>\n *\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>Wednesday, November 7, 2012</span>\n *\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>mercredi 7 novembre 2012</span>\n */\nexport var DateField = memo(function (props) {\n    var className = props.className, emptyText = props.emptyText, locales = props.locales, options = props.options, _a = props.showTime, showTime = _a === void 0 ? false : _a, source = props.source, rest = __rest(props, [\"className\", \"emptyText\", \"locales\", \"options\", \"showTime\", \"source\"]);\n    var record = useRecordContext(props);\n    if (!record) {\n        return null;\n    }\n    var value = get(record, source);\n    if (value == null) {\n        return emptyText ? (React.createElement(Typography, __assign({ component: \"span\", variant: \"body2\", className: className }, sanitizeFieldRestProps(rest)), emptyText)) : null;\n    }\n    var date = value instanceof Date ? value : new Date(value);\n    var dateString = showTime\n        ? toLocaleStringSupportsLocales\n            ? date.toLocaleString(locales, options)\n            : date.toLocaleString()\n        : toLocaleStringSupportsLocales\n            ? date.toLocaleDateString(locales, options)\n            : date.toLocaleDateString();\n    return (React.createElement(Typography, __assign({ component: \"span\", variant: \"body2\", className: className }, sanitizeFieldRestProps(rest)), dateString));\n});\nDateField.defaultProps = {\n    addLabel: true,\n};\nDateField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), { locales: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n    ]), options: PropTypes.object, showTime: PropTypes.bool });\nexport default DateField;\n"]},"metadata":{},"sourceType":"module"}