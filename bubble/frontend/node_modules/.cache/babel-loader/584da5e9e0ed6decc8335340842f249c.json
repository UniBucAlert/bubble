{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { FETCH_END, REFRESH_VIEW } from '../../../../actions';\nimport { GET_LIST, CREATE, DELETE, DELETE_MANY, UPDATE, UPDATE_MANY } from '../../../../core';\nimport ids from './cachedRequests/ids';\nimport total from './cachedRequests/total';\nimport validity from './cachedRequests/validity';\nvar initialState = {};\nvar initialSubstate = {\n  ids: [],\n  total: null,\n  validity: null\n};\n\nvar cachedRequestsReducer = function (previousState, action) {\n  var _a;\n\n  var _b;\n\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n\n  if (action.type === REFRESH_VIEW) {\n    if ((_b = action.payload) === null || _b === void 0 ? void 0 : _b.hard) {\n      // force refresh\n      return initialState;\n    } else {\n      // remove validity only\n      var newState_1 = {};\n      Object.keys(previousState).forEach(function (key) {\n        newState_1[key] = __assign(__assign({}, previousState[key]), {\n          validity: undefined\n        });\n      });\n      return newState_1;\n    }\n  }\n\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === CREATE || action.meta.fetch === DELETE || action.meta.fetch === DELETE_MANY || action.meta.fetch === UPDATE || action.meta.fetch === UPDATE_MANY) {\n      // force refresh of all lists because we don't know where the\n      // new/deleted/updated record(s) will appear in the list\n      return initialState;\n    }\n  }\n\n  if (!action.meta || action.meta.fetchStatus !== FETCH_END) {\n    // not a return from the dataProvider\n    return previousState;\n  }\n\n  if (action.meta.fetchResponse === CREATE || action.meta.fetchResponse === DELETE || action.meta.fetchResponse === DELETE_MANY || action.meta.fetchResponse === UPDATE || action.meta.fetchResponse === UPDATE_MANY) {\n    // force refresh of all lists because we don't know where the\n    // new/deleted/updated record(s) will appear in the list\n    return initialState;\n  }\n\n  if (action.meta.fetchResponse !== GET_LIST || action.meta.fromCache) {\n    // looks like a GET_MANY, a GET_ONE, or a cached response\n    return previousState;\n  }\n\n  var requestKey = JSON.stringify(action.requestPayload);\n  var previousSubState = previousState[requestKey] || initialSubstate;\n  return __assign(__assign({}, previousState), (_a = {}, _a[requestKey] = {\n    ids: ids(previousSubState.ids, action),\n    total: total(previousSubState.total, action),\n    validity: validity(previousSubState.validity, action)\n  }, _a));\n};\n\nexport default cachedRequestsReducer;","map":{"version":3,"sources":["/node_modules/ra-core/esm/reducer/admin/resource/list/cachedRequests.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","FETCH_END","REFRESH_VIEW","GET_LIST","CREATE","DELETE","DELETE_MANY","UPDATE","UPDATE_MANY","ids","total","validity","initialState","initialSubstate","cachedRequestsReducer","previousState","action","_a","_b","type","payload","hard","newState_1","keys","forEach","key","undefined","meta","optimistic","fetch","fetchStatus","fetchResponse","fromCache","requestKey","JSON","stringify","requestPayload","previousSubState"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { FETCH_END, REFRESH_VIEW } from '../../../../actions';\nimport { GET_LIST, CREATE, DELETE, DELETE_MANY, UPDATE, UPDATE_MANY, } from '../../../../core';\nimport ids from './cachedRequests/ids';\nimport total from './cachedRequests/total';\nimport validity from './cachedRequests/validity';\nvar initialState = {};\nvar initialSubstate = { ids: [], total: null, validity: null };\nvar cachedRequestsReducer = function (previousState, action) {\n    var _a;\n    var _b;\n    if (previousState === void 0) { previousState = initialState; }\n    if (action.type === REFRESH_VIEW) {\n        if ((_b = action.payload) === null || _b === void 0 ? void 0 : _b.hard) {\n            // force refresh\n            return initialState;\n        }\n        else {\n            // remove validity only\n            var newState_1 = {};\n            Object.keys(previousState).forEach(function (key) {\n                newState_1[key] = __assign(__assign({}, previousState[key]), { validity: undefined });\n            });\n            return newState_1;\n        }\n    }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === CREATE ||\n            action.meta.fetch === DELETE ||\n            action.meta.fetch === DELETE_MANY ||\n            action.meta.fetch === UPDATE ||\n            action.meta.fetch === UPDATE_MANY) {\n            // force refresh of all lists because we don't know where the\n            // new/deleted/updated record(s) will appear in the list\n            return initialState;\n        }\n    }\n    if (!action.meta || action.meta.fetchStatus !== FETCH_END) {\n        // not a return from the dataProvider\n        return previousState;\n    }\n    if (action.meta.fetchResponse === CREATE ||\n        action.meta.fetchResponse === DELETE ||\n        action.meta.fetchResponse === DELETE_MANY ||\n        action.meta.fetchResponse === UPDATE ||\n        action.meta.fetchResponse === UPDATE_MANY) {\n        // force refresh of all lists because we don't know where the\n        // new/deleted/updated record(s) will appear in the list\n        return initialState;\n    }\n    if (action.meta.fetchResponse !== GET_LIST || action.meta.fromCache) {\n        // looks like a GET_MANY, a GET_ONE, or a cached response\n        return previousState;\n    }\n    var requestKey = JSON.stringify(action.requestPayload);\n    var previousSubState = previousState[requestKey] || initialSubstate;\n    return __assign(__assign({}, previousState), (_a = {}, _a[requestKey] = {\n        ids: ids(previousSubState.ids, action),\n        total: total(previousSubState.total, action),\n        validity: validity(previousSubState.validity, action),\n    }, _a));\n};\nexport default cachedRequestsReducer;\n"]},"metadata":{},"sourceType":"module"}